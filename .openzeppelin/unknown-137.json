{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1D543AD542ee42C26A08E05Fef4a91183701840F",
    "txHash": "0x529105b8b5ecbc991cf8be40e99f1d0fa5b7a3d81b914dfd29199107dc9a5c97",
    "deployTransaction": {
      "hash": "0x529105b8b5ecbc991cf8be40e99f1d0fa5b7a3d81b914dfd29199107dc9a5c97",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0xCF3D200356Fe8e5E2fa9f6fd59B01D41732BCf4c",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x45d964b800"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x7a1200"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 37,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x935e7766c5d62d06169b28934a26d65871d7a63e6f4ed4bf62c983a986034e55",
      "s": "0x63219370d355265531a8bc6b2717cc3673ae2adcb912f50b84d49e50f25b0374",
      "v": 309,
      "creates": "0x1D543AD542ee42C26A08E05Fef4a91183701840F",
      "chainId": 137
    }
  },
  "proxies": [
    {
      "address": "0x9bd58644CFC6697B57e530b62679dB25cf12D96b",
      "txHash": "0xb2ef40a94f39309a7ac63eb7506fb4ab7d344d3984ebd28a12d055522fe0b15c",
      "kind": "transparent"
    },
    {
      "address": "0x75EbBcedc44f47dFD8fB1bc438bC27739a954bb8",
      "txHash": "0xb0661f705590b5599731b9179432d9cf74158001b443e23781583f176e27c4a8",
      "kind": "transparent"
    },
    {
      "address": "0xC9ce4cb1d4Da6Af6FF92CA932bC70515E6351704",
      "txHash": "0x555e7a71718653e3393c95a617eee58d1a5656590db8ed53fca8c5a925cb7a80",
      "kind": "transparent"
    },
    {
      "address": "0xb053C9904C02506f9Fd88aE3C4f6A199576dd947",
      "txHash": "0xc299003a11f0f22a1e0d27ae1817f33401d31604dfc587769c79d1240d4a1b0a",
      "kind": "transparent"
    },
    {
      "address": "0x4257Db457479a4Ae3aA0646D09224cDC56b6f773",
      "txHash": "0xaa767264f9ff7afa74d1f28aa50a2555b04d7116a228445fb8abf539fbbb8298",
      "kind": "transparent"
    },
    {
      "address": "0x0d5104199D6f6C9bFB971B422df4f60Dc1Ce0588",
      "txHash": "0x7aa0be5f6797c3deb07fcd583d9f18be12be1ca6acf8bae30ca870246fca100f",
      "kind": "transparent"
    },
    {
      "address": "0xa4084F2ab2B7c0DbEf50D88f92f194f1Ce8Fdb8D",
      "txHash": "0x27490ea1a517c52d9e50a133b9b69fed54bb4524dc6801ca15cd89a6e58edad2",
      "kind": "transparent"
    },
    {
      "address": "0x94B3c672aBd497A2E275588b03969606d3DeEAB2",
      "txHash": "0xb906584c243572c56af4e29741bbb1ed0a84dc80901657bd650bf5cf21d49142",
      "kind": "transparent"
    },
    {
      "address": "0x00f88411f364d87D0f9Df45b3566fbeA35031139",
      "txHash": "0x3eebd3624d4cf882dfac36044b168d4c7879922c1cc21c9174e643eaf450bae8",
      "kind": "transparent"
    },
    {
      "address": "0xA103aAA95CC8f92d5b2154ECd7a74667a251d71C",
      "txHash": "0x9780ee8f36169976c008b3eb7d732450e49cff8e803fcbee676587935314778c",
      "kind": "transparent"
    },
    {
      "address": "0x40d355340DC7284F2121939e92B98c090B399c2B",
      "txHash": "0x4a1cb8e45ead678d790c7d11406f7ae20fbed9ee36468538d1e06231da60d7a6",
      "kind": "transparent"
    },
    {
      "address": "0xd57ad60B8Db23Dc2829ABcB24378648439181047",
      "txHash": "0xe335bf845e7e45b931670d4451873b06e847645e2fdd6c26d900f074a2e14436",
      "kind": "transparent"
    },
    {
      "address": "0x2aB066033B4645C2c56A1368Ee061FBb0a55aeFE",
      "txHash": "0x63a2b12b55a254dd46253c15c638e786fe79748f6ad05ba4c2df6ababc040f30",
      "kind": "transparent"
    },
    {
      "address": "0x7Ee4E0D451a4430600b384fD039283F369661C4F",
      "txHash": "0xe58927adb520b80a1c2699be002235ec66a1e08e15010547d3d205530c7c9b37",
      "kind": "transparent"
    },
    {
      "address": "0xD8740E096780843A7c2963b49fdAc68480166E91",
      "txHash": "0xa2441ddb3fa44440f22d3757a296bdab4559f6f0ac687e898b5e50b8d316c63a",
      "kind": "transparent"
    },
    {
      "address": "0xc2E7Be27064798c8795Cc3A04953DA0C43C53ecB",
      "txHash": "0x683a51ab3b132f377c59f29f82c91bbc858c44ba83fae334601b7faf042e3495",
      "kind": "transparent"
    },
    {
      "address": "0x5Cb457320126F4d178ffFAd88C6395f5bbC035e8",
      "txHash": "0x2f07c73b7adc3960fec8d8364695b3abc841839dde7c8f9f9bca3453cd8dd731",
      "kind": "transparent"
    },
    {
      "address": "0x7F39eCcFE02D79cFfCf816598f797C6509465ba2",
      "txHash": "0xe7566351989212bb562f8549ba1f7199fdf06ca81b08c8d5b7d3e6f5ae941d3f",
      "kind": "transparent"
    },
    {
      "address": "0xb68c9f0E76F16890D4a72e0D86d7B39c45d5D6eF",
      "txHash": "0x24158f5749e7ed69ef8253a509439152f784fb83fdb38e20d739f18111b66889",
      "kind": "transparent"
    },
    {
      "address": "0xE7A80F485D47ab528a58c45D2d43337f9972d46F",
      "txHash": "0x0dc8a08c94f1d1c9c51d7fa7367110c663d496d1a0ab6cde7654216728214df8",
      "kind": "transparent"
    },
    {
      "address": "0x6472108020B05451b9CD75b9C129E46C67aefF69",
      "txHash": "0xd7ab8f84fd1078622a95e156057a939217e16e9c3503fb7c974369a6bd909606",
      "kind": "transparent"
    },
    {
      "address": "0xf036D5DB214Fe6347d0F50Aaa6Dc3eD12a4E38d5",
      "txHash": "0xd6f8a58ec629eb4d3a50dbd8c9388fbe7689371ea5a056f3619eda6597ade9be",
      "kind": "transparent"
    },
    {
      "address": "0x407E3ccC28d9A5EBA1535415f3F92C0b9BAf70CA",
      "txHash": "0xa579b99e3de42358e84286668fb4b2db138aec3dbae829c37451d604bbf22d7f",
      "kind": "transparent"
    },
    {
      "address": "0xC013942AcF243a4fDbB8D4ecFba37c9AF496d328",
      "txHash": "0xe10dc07567c6f72a591966491ce012c3742a9fcc689075dc5c2e8649c15b7af1",
      "kind": "transparent"
    },
    {
      "address": "0x76BbD5382e06fC0c1bf2C7a9d6B118E9318A2D1c",
      "txHash": "0xff50961ff428625f2fe885d25b38aadc91018d857b354d26bd8cd82832c693ae",
      "kind": "transparent"
    },
    {
      "address": "0x9C1C4Ed066d7578482C06a3acAF6Fd03243e7e52",
      "txHash": "0xcc058c2de679f8790944a9b0975b01bd8300a7a0953b31ce7add98f6d7997ee4",
      "kind": "transparent"
    },
    {
      "address": "0x666E30e234603F489545Ea0549034C0018a2aB9A",
      "txHash": "0x2334ce5b131f2576c35ee642932ece18422d68a8f154199ba225ba91bf9154a2",
      "kind": "transparent"
    },
    {
      "address": "0x40260B7501C7CCe7DA2D764EEbD2652c8C776d88",
      "txHash": "0x1ddd34cc43825ff402635ae5e3cbf060d771fd7e713975eda5ece5c4053d660e",
      "kind": "transparent"
    },
    {
      "address": "0x860a6147a245d3CD0be54ffdd82Aadd976f70651",
      "txHash": "0x3edb5bb1e8cbd8978f744c7b40ade5a2bc975647f78543a5f0b2c7d1caf6eb4f",
      "kind": "transparent"
    },
    {
      "address": "0x7157858AfCD9C7C4b36ED2E5394ee0D498416F00",
      "txHash": "0x35e497f1a266d9545b41adf0f46d5e4d083b3d8d83ff3ae322c4b2554caffe86",
      "kind": "transparent"
    },
    {
      "address": "0x07C9C5d3318685B5A5EC071dA991B313aC14E69B",
      "txHash": "0x3872705f63a5db458d6cf1360f772e76bc80044c28a763a4dbb156a5ce94d935",
      "kind": "transparent"
    },
    {
      "address": "0x202D2D8A39021E4C2428EE8b6b9144Eb69708A95",
      "txHash": "0xcd90325067945147f80d697459960839c3bbec1403f6a6e9befa7f99dc9d57a5",
      "kind": "transparent"
    },
    {
      "address": "0xEE1D0f8C633292163Ff711283ce35edFBfCB01C7",
      "txHash": "0x9485cdc64e6e4cb87a4d0acb559a771fa009578d2c4a48895a0363031ac5af5c",
      "kind": "transparent"
    },
    {
      "address": "0x4Ccc3c3413452ffec0468Ac6f99123EfB1C29E1b",
      "txHash": "0x2e0d03149239cded4e5fa75665d3d28eb304ad03773813e7aeeeb6f59c129c9a",
      "kind": "transparent"
    },
    {
      "address": "0x7D3b283dC50f970b93CD720A8335aE938b90E966",
      "txHash": "0xc188235d2b23926a7ccaa9a7afb3c108eeacdb3a31fdefdc577aeaaa6c498246",
      "kind": "transparent"
    },
    {
      "address": "0xecAEC9c9aBCBB1Cce138daECa70D65521B59e2f3",
      "txHash": "0xe3eeab320defd26c8f7f9116271f67e54934d402efb12dc0160492db98564923",
      "kind": "transparent"
    },
    {
      "address": "0x30A73D0DB28E3f6C822BA4F0229b6251007e45c5",
      "txHash": "0xa0fc410d51b71cad7413ec867bf2aeee2e9311cae4c502f6d0925afb97f4c224",
      "kind": "transparent"
    },
    {
      "address": "0x1fB4BB0c33266E01d371C392444C9BaA17501C33",
      "txHash": "0x752af0dc293cd08ce516adb3f513d5310962c81673c930663995ff1ec1b3bea4",
      "kind": "transparent"
    },
    {
      "address": "0xce8Df56326d4e145E8c0E034e549a02f3d799fB4",
      "txHash": "0x12b9368d785ed8ff4eb247616b9c81dd4ba21bce599cbf0f6f35128a6ce6bb51",
      "kind": "transparent"
    },
    {
      "address": "0x74Be26e64478dC4e30e3231C97A2a17A778E0B10",
      "txHash": "0x6659973b310117a41c9c4a3e6784f94e16b36ddd64a3f76773c5705830cc67e9",
      "kind": "transparent"
    },
    {
      "address": "0x2C9f6d57BEf09cd309aEbc80526590A134890b52",
      "txHash": "0x4824267fcc6c97e36c2c0078b63c2d8b796e644020e677e5709366d584bf9ac3",
      "kind": "transparent"
    },
    {
      "address": "0x8B9d613F8a8026CfcaE78ab4e8F89bcaa77878A8",
      "txHash": "0x7f2b413098d28ecb23b2b1ba2da2cf41d35f6b1ebe9805449de43adf91e7c766",
      "kind": "transparent"
    },
    {
      "address": "0x38DBcdf0302449BFbeB320A21cD32A0E3c43A868",
      "txHash": "0x5ed7b2b6c179844040d4a9b02ce46423c61c3464f2baf0af06914eb968d8f5e7",
      "kind": "transparent"
    },
    {
      "address": "0xc1e3354F76DaAFE3a8605f106EAaDd1b988998D4",
      "txHash": "0x9962e27dbb7c8734f36ab05c0e8293b919f42f11e4e21728cc5dae6edab329b9",
      "kind": "transparent"
    },
    {
      "address": "0x27B85753FCE344f363be5920BA1F55578e379Fa3",
      "txHash": "0x344b0d60a51badf4bceb1e121bf71977e081bb3476efa62368a38efa314984b8",
      "kind": "transparent"
    },
    {
      "address": "0x62691830bb0d409D89159F87f774A4dA9FDbF442",
      "txHash": "0x7476910dcf5eb3c69d247e2a8c21154dfbc8bbc9a84114865babc764167f4e4d",
      "kind": "transparent"
    },
    {
      "address": "0xb51e0Ae05E7CFF51274045Ea8F4ecE1f9b69a2b4",
      "txHash": "0x1abbf3c23649d93f96ea96111cdaf0ee2952675442517b0520f684e6d06f8b96",
      "kind": "transparent"
    },
    {
      "address": "0xdC271dFE7c7F0e855279c01C5D9c9A8EB834F6Bb",
      "txHash": "0xd123b6f22bad40dbe557fea9a8d4462cae4ceaca6d886678470dee8d9e480518",
      "kind": "transparent"
    },
    {
      "address": "0xD709216C9920B4cD26993b778C16Dca063F3072B",
      "txHash": "0xffd27b392bcc22e8e2ec65bfd0dccabe756b7be6e60e4d5751aba607f4967f0a",
      "kind": "transparent"
    },
    {
      "address": "0x183F81aABfacB3C674Dd4e199D1b8b52F209Fc69",
      "txHash": "0x28cca138d52239c69ad91f69672bdf841c3457e97325e28d27caeec95f07d60c",
      "kind": "transparent"
    },
    {
      "address": "0xC23c644d670256C949Ac2Bbe81Be4fC1dA120813",
      "txHash": "0x1785d28e1b05673c10df0194c39e4f4ce6007a45dbb3c7a01a88c1166da55fab",
      "kind": "transparent"
    },
    {
      "address": "0x6ADfB938042136AB945635479171249Cf259fd9a",
      "txHash": "0x9371921193d01ba9924015f8e42b60cb0033b889799ae161f93d1fa13d4071e7",
      "kind": "transparent"
    },
    {
      "address": "0xD850d9a99e5d8CC2019A573F6A2A40767B6379fA",
      "txHash": "0x00a50c657ec66d9b7fc21c62f50888e40aaabab141ff0c56ae81bfbff35a4bc0",
      "kind": "transparent"
    },
    {
      "address": "0x010F25385DB45Fe2fd54F95e894a81E747aF1677",
      "txHash": "0x10ddb4923879e8360c4adfd864d11e1b92cdf227339a9eac41fd6b47952ff203",
      "kind": "transparent"
    },
    {
      "address": "0x9ECD0B8B252f41e321B1319E405F8f10D4b414B9",
      "txHash": "0x9591958be4aa8d76c62e2d93655fd9f38cd9cda8f832c029db6eb36383567cdd",
      "kind": "transparent"
    },
    {
      "address": "0xC9Bd0Caf91F39770Dab1212836F006BA514ba9c7",
      "txHash": "0xd52a06969bbe0c026c00de95134716873a33c30e2478fd9045eb0a09190feb3e",
      "kind": "transparent"
    },
    {
      "address": "0x78B2Dd73FC4f324679baBa96Eea34dA1D292d745",
      "txHash": "0x66de99d62ae71907767f212cac05a30d6936ff8598b26df9939fc3f8da49fa4c",
      "kind": "transparent"
    },
    {
      "address": "0x2E9190A88236c598e0031ABAE80710568e0D0e09",
      "txHash": "0x18585a9b3c3e874f0253b067daa565f9229e2925debf89d7aa77aa0b5a58ec13",
      "kind": "transparent"
    },
    {
      "address": "0x0A69270877Ed889c14cd8d335bE45C0bB006A85d",
      "txHash": "0x78568185a8b587a5676be34eafc5a365f3bd2f022a4fad08055878da84c9edc3",
      "kind": "transparent"
    },
    {
      "address": "0xA7Da053648F6E61cb7f5e61958561B5A484d9830",
      "txHash": "0xb013f0ea1a165e63cdb042de37e0ac7d178096f3a6ade656b21cdd99d6105d86",
      "kind": "transparent"
    },
    {
      "address": "0xAf636a064DEa95b8E6Bf42001abFb39529cD6718",
      "txHash": "0x6d5ff57feb4ee57477ae1abc3d0777950c3720aff71484d0f95dc0686258818a",
      "kind": "transparent"
    },
    {
      "address": "0xe6F51bF33dc70ed3269B6bBD81119fb637979c5E",
      "txHash": "0x6f6dd7c5a1853c4c2ef204deeaaf44485e0a37f63704262082b126c8ea75210d",
      "kind": "transparent"
    },
    {
      "address": "0xa4afc7556110FE80C2D1F2aBd2A16624d6443a4E",
      "txHash": "0xdad29dd399f0a3ffe6253d1f35c66481a268015546e2af4312a77b85898f2e66",
      "kind": "transparent"
    },
    {
      "address": "0x815451B53998b2C461103D682A2d08f60c83E916",
      "txHash": "0x8aa52001c0bf08afc7c9b3cc6601d3c4dafbfb438e813a60d82c2ae0ab2bfc7d",
      "kind": "transparent"
    },
    {
      "address": "0x0fdB1e11cF3498bb9aA6905Ac9f14Cc6dbE19a04",
      "txHash": "0xc512653d52332736558342c86ddfd12d7e87dd481dfb34db7e1d6872c9cd0e88",
      "kind": "transparent"
    },
    {
      "address": "0x78be101d59a73779307decaDadb8fCD8bc68F634",
      "txHash": "0x02958061f79f0ccddc19aef8a33dacf48c12c0b72e9cf35f6925b05314aefc29",
      "kind": "transparent"
    },
    {
      "address": "0xb45eCA9624CE3679e83C61c664a07635caA25240",
      "txHash": "0xe9478d57abc0e9b742d89b8b1f938ad740ae634e1c5ba5f39fbeff3e01202e81",
      "kind": "transparent"
    },
    {
      "address": "0xF900395be1a468870091321D220bFe67f2c0Dc87",
      "txHash": "0xa29e6c1d153ba45a33ace5348d52737da84293bb1e495260176f3b7c3a9188df",
      "kind": "transparent"
    },
    {
      "address": "0x376B41Db057d2983eE25953868606486991eEa81",
      "txHash": "0xff4bc1d58295ef11c697c6753b2af1a8cb0263ce15c60eab79fc7a2b3fe67178",
      "kind": "transparent"
    },
    {
      "address": "0x27079c729c695D52Eab499CC9047A76aD2cf65d9",
      "txHash": "0xe782fc083316a624e696e3055e7e414196a523cd320bf8a08272a36d8a20b6e4",
      "kind": "transparent"
    },
    {
      "address": "0x497FdA72Bae487Be4d851Eb378B8cF6aBA38d0DD",
      "txHash": "0xefb5c8c9ff37fce683062f3c27eada5986127bc73abcf0aa4bd1dddc6bc973a8",
      "kind": "transparent"
    },
    {
      "address": "0xD545262F1088B69c2F741f821173A5B523602f17",
      "txHash": "0xd372a435d409e9df80db5e353064823c6f74b997c70fa0af7eab22f3493d7245",
      "kind": "transparent"
    },
    {
      "address": "0xd6cBc8C983AbAaf50F12aDB313990975Bb07A7dB",
      "txHash": "0x3c3bf4b9deacf1465442886d80733f2734888fa197cb6fed0a4938e25a5d6da1",
      "kind": "transparent"
    },
    {
      "address": "0xd9Ea4287A9B05AdfE1eE8D5ce1d50a42e91903e4",
      "txHash": "0x371cc0d9364f8798ae1399b16d9480c358fe276f09cc4d4556b9a78da19221e2",
      "kind": "transparent"
    },
    {
      "address": "0xeBBF97442786123BaD3cB5eCAF2538b2d150746E",
      "txHash": "0x45ef8a58933571ae41036bab6e7475e82f95b74c8d0ad991d64dcb2331d2775b",
      "kind": "transparent"
    },
    {
      "address": "0x8A36248AD71513A9F4ddBf9C4E7E6930b21458e5",
      "txHash": "0x6d46236b9ffb231e91db475ae9b22949cda17d3ec398eb65c09421092e5575a0",
      "kind": "transparent"
    },
    {
      "address": "0xEe3E55b9d57EfDa9ED3D66D3649af46100980084",
      "txHash": "0xd0102002a4485f9d38072658d57e01fe7562f82f8fd677d706292aa5f5aca2d3",
      "kind": "transparent"
    },
    {
      "address": "0xAeC34614E5293422d2150aF39D0f868E35871b14",
      "txHash": "0x5fee4e26df20ddbf8fc45a604d634f6dbd85202b8fb9069493444c2f66084b5b",
      "kind": "transparent"
    },
    {
      "address": "0xc7F849abA5186BB5dD15FbA8bcd8395C319e4ccb",
      "txHash": "0x09b4d8a90eda01b0b3c9de743810f82fd76ae7b7a78771eb07007d1dc3dab6d9",
      "kind": "transparent"
    },
    {
      "address": "0xaFA3E629bcFefb145F0dcEDd86D16f72429D498a",
      "txHash": "0x365dd2b5065de9bf47bee7adde59cc0236d16ef048d30d348892288f324df047",
      "kind": "transparent"
    },
    {
      "address": "0x6889107aEB9a390Ce426A420aF84a71363b70E7b",
      "txHash": "0x583a45615b9999ab0a617ebb90db3235dde8b032a5535dbb4ffbf8a616ea2731",
      "kind": "transparent"
    },
    {
      "address": "0xA70BE57d0bEa3EDEb182EEA10eC6D158cfD0Df76",
      "txHash": "0xcced6e0b51f61d0df8ee86872c4e40f1794b1b13d55f7070939a9d467eda776d",
      "kind": "transparent"
    },
    {
      "address": "0xFB4365992499c1fa6AeFCf714Ef037b4FA3AF705",
      "txHash": "0xbcb5530c275e68bb31ff95456b54bb9a98a09a73d6a360da42e9822ecf2a7996",
      "kind": "transparent"
    },
    {
      "address": "0x4B91646228de49d217248D55d07799E00eec7170",
      "txHash": "0x842ffaf38b742fda30a4156aac7fdd0b3a42fa1da9c541950db19a1061349a76",
      "kind": "transparent"
    },
    {
      "address": "0x0C1C668cB1912D26b2bD813C2f9B9051Ba95A0e2",
      "txHash": "0xc79ff344836d097734ee1618f8a764bcb79ebf236aa9ef353184f97963b2361f",
      "kind": "transparent"
    },
    {
      "address": "0x51D0924a7ad6d3498d90594cDe394Ef51087Fff5",
      "txHash": "0x344d61f8c4138c0f2d936a5bb00f93fa8faea6fcc29911a435282cd71c4bdaad",
      "kind": "transparent"
    },
    {
      "address": "0x3B486240a38B7A39788BE7c1cE96F31335CcB0DA",
      "txHash": "0xc39a0383998f2fd1fa59684902b6ba6021e60be951706d0545de91dae7c4be2e",
      "kind": "transparent"
    },
    {
      "address": "0x93b72A6E3F10fbb3D03a1b3C379b4A9ACe6Ac5cE",
      "txHash": "0x9aa1843edc04cc744b950899daf90d541691acecfb1c3a3e9ab9a50b54ecb9a6",
      "kind": "transparent"
    },
    {
      "address": "0xd357733F86B3B36d9ABbF4F24bfAb541818355eC",
      "txHash": "0xb18a197b9c06761209b4cfd207e5ab50331e979a0ac51455b279e99e46b77a92",
      "kind": "transparent"
    },
    {
      "address": "0x9Ab0ed2AE99C20C7f84A63e9157dD9F207B01Bc9",
      "txHash": "0x97ba57455f73858177f3f6dc59b57695d5ed3ebd8456946b29c1931e416799e6",
      "kind": "transparent"
    },
    {
      "address": "0x1D0C3F2a95A7B8DC9677cF02aEd36593f72Deb95",
      "txHash": "0xd560d8f24704d40532b55261b64bebe62bd9641762f3ee78eb1bbfbd3b534907",
      "kind": "transparent"
    },
    {
      "address": "0xEABe8b3E1D114C27A42018fE9698067a8d17E674",
      "txHash": "0x6a5e0f975be3c92b00d91c9667209691335aa809b50b98d08a09d776df63dcf5",
      "kind": "transparent"
    },
    {
      "address": "0xc8BCa697af37417f1Bc8d3b10a7BB29d8Ef9647A",
      "txHash": "0xdda1822c754442f2c897433c321fc78f1c99d80d04b82381734df754dc261c58",
      "kind": "transparent"
    },
    {
      "address": "0x00382FE326C7E0167bbD5f00D22C592B4f144104",
      "txHash": "0x3c6490ef6c3d341ad2582fb5140049aaa5808ae035f340c67973948872f27f05",
      "kind": "transparent"
    },
    {
      "address": "0xA51dA4E2C171A194Fa7cdEE0F87216BD1ee18232",
      "txHash": "0x8a0b5583283d45f8250a37788a07cec37f5ed8b93a365e5dde9fbc28961e235d",
      "kind": "transparent"
    },
    {
      "address": "0xAF41bEb3cD4b5dbB50be66E6d30cec4Ed993627c",
      "txHash": "0x068adfc711832476285624734dc08cf1de3b94ba6ed8c548bece83196e581254",
      "kind": "transparent"
    },
    {
      "address": "0x0b92A6D9C36C4C365375BD3fB85F252772635Ae4",
      "txHash": "0xd54485eb1c24a8f249df8ba1dd90c8c33aab572cd00fd80cee7c0d3eba2bcb0f",
      "kind": "transparent"
    },
    {
      "address": "0x78dc3895C1B365Da87D5C59288C84e9Aa40a46D1",
      "txHash": "0x7086afb76d5b194d98f5f274c7b8b0745eca1adc8b7674f9e656babebe8899ed",
      "kind": "transparent"
    },
    {
      "address": "0xc461A6D3698E5cD7f1835F6FfD5C3986523056F9",
      "txHash": "0xca4e6b8bf9620dc2f8751feca25f455a488d36ababcc20dba533c3d68b479d0c",
      "kind": "transparent"
    },
    {
      "address": "0x16D508254A0783d46F08e704bee5c7157A2E74B0",
      "txHash": "0xc87a427f3a69527e850238e3ce7393fe6d15a80079668396fb4b6073add5a962",
      "kind": "transparent"
    },
    {
      "address": "0x6F851EA9b91065AD1ac5439D54AD6ef304dEF7Cd",
      "txHash": "0xb09dbb30f23515def4ef0cf8ef407289ab7333bd8e1e3f330e1ca031c87d7a6c",
      "kind": "transparent"
    },
    {
      "address": "0xD8c05ca7d13B18B74c341D84C3a5f2Fd9c97015A",
      "txHash": "0xae1d8a78a6d513c1de7987ab01ae7d40e7a1e398f30788ddd8157a9fea19ae74",
      "kind": "transparent"
    },
    {
      "address": "0x6efFb9F8cBD343B8E04a00c99bCa6A2343103ED7",
      "txHash": "0xa204a00ea10352e26ea7c59bfbcedfb73cd8b921768f78be1b3be21323ceb9da",
      "kind": "transparent"
    },
    {
      "address": "0x0D8DB31DaFF28B93C01cB9c65D36a6cD876a3509",
      "txHash": "0x19547a324df5470d79a3efe6283dcd4df3c9107d7405021f083303c7e5b78972",
      "kind": "transparent"
    },
    {
      "address": "0x77462049291F95C1cc41a3110431cD4f818d0990",
      "txHash": "0x590f7beb06ceae62ca51ff5ea580ba2a7597b715f5a3bfe8a4c8a04fe5b26610",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8a27bec9bbbe04e04d7921aa381dfd725a453b6aaf5d3f1979d89246a4eb298a": {
      "address": "0xac9d3ca9AAa71bF968dB4d2B3DbC2C1fA09fA546",
      "txHash": "0x2b6898621fbafcda2aaf1360dec00cf136b2da8bf001002612a2d5a1241e65e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:24"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:27"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:30"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:458"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)23377_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)23380_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)23377_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)23377_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)23380_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)23380_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f453bbd2ab8843c0361b0fd989cd47387d52f639768b9d518c7ec0f194315075": {
      "address": "0x620538e402fD15a3Abe720919d88eE0E1C74BE10",
      "txHash": "0x6b5b93913a520656f316d260041cc341857e07a0909487dadba4b90b8937fa88",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)23377_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)23380_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)23377_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)23377_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)23380_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)23380_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b911d3e0fdb3da06c887cfcc33d21a5a0bf276ce6f3aca62f5f1add6563c51f7": {
      "address": "0x324ba5C123bc58FCF777EA45b68e58DdB2C9Ac9A",
      "txHash": "0x3919655cc57d162a9702a99201d0445fa688f3830c58c3205e9af823177abf67",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "30b8422211411bff2225cfe3d3842f8314c0ae0640d2775bde4171b4f9f635bb": {
      "address": "0x017fae2e3C6952Da7b8A20Fb936b05d4D3023664",
      "txHash": "0x70e990d8e5841598f645993f526b758fee81aa2db372b5ee4c7946c73dae43de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e6356193ff97e5f119f96c8f181d6d4d02a4d00bf31fe1ff4184caf065b3b1c": {
      "address": "0x846b093355C43A311f51142d9CfCde988b5d4728",
      "txHash": "0xa8b6fcdb002bb52e38d11abcf077a3a23b8d43ca83f950837dbac519f2595a60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "630102a1b3203bf76ec007d292c398e391c6b8c902433c92e1927c23930f74f5": {
      "address": "0x3444E7AF84E5fE8AE9682AD2d1Aa8C9532696009",
      "txHash": "0xb709eb4b902c272d8358f9199d614bb6082c8c17624580f0654658081720e495",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "aa4f3decee71c846ce2e8da4edc62083126b74a430350920a141615348a1a6f1": {
      "address": "0x76a9890A9Cde2900B6e88B85E0C7627A2EAE810f",
      "txHash": "0xb7ee85af3a1395b33b02c9fd44122565e9a1683bc4b508bb504334d3081b9e45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5468fd55b193865caeedf29a598c21ba2f972ffecd1dcfa74ca80e518a08508d": {
      "address": "0xb9FfC1c9F6d71e763569f969C4c8900f09eA9b57",
      "txHash": "0x1f1e2ac888e2b49b6c96424b6db413b7b5f5f2daba06ccd36e29ff3268381e6f",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "940871721be5c06cadea9ac9855614bea9236ae1276263eaa3a2e0427c80fe8f": {
      "address": "0x44f5c1111ca5b1F7CBb123E805240B9Fd344220b",
      "txHash": "0x1f0c321e972e54101a7be8520c7b70b84a9acba6f7f45981afc0e80043fee355",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "TemplateStoreManager",
            "label": "templateList",
            "type": "t_struct(TemplateList)21837_storage",
            "src": "contracts/templates/TemplateStoreManager.sol:26"
          }
        ],
        "types": {
          "t_struct(TemplateList)21837_storage": {
            "label": "struct TemplateStoreLibrary.TemplateList",
            "members": [
              {
                "label": "templates",
                "type": "t_mapping(t_address,t_struct(Template)21828_storage)"
              },
              {
                "label": "templateIds",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Template)21828_storage)": {
            "label": "mapping(address => struct TemplateStoreLibrary.Template)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Template)21828_storage": {
            "label": "struct TemplateStoreLibrary.Template",
            "members": [
              {
                "label": "state",
                "type": "t_enum(TemplateState)21818"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_enum(TemplateState)21818": {
            "label": "enum TemplateStoreLibrary.TemplateState",
            "members": [
              "Uninitialized",
              "Proposed",
              "Approved",
              "Revoked"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ecabdbb37aff570f0ab6f73f35a8ac1ba3fb0981a31b9c975b1cc774869a2036": {
      "address": "0xa8AEf5dCB7CfE5a560d4ECdBD224c2A0f31A8766",
      "txHash": "0xacae2adb5b1eb84c1e656283cf6dbafac62cc907f9ab4828bc936ffd7672cf33",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c71cdafda5fbd94aa068b3f964147948c24a94ea171452ee18506a40dd123094": {
      "address": "0xDeC5cc9ba33f99d57503AaF7Eebc6467CCd8f4b9",
      "txHash": "0x7af58b3e9b3d543a58c3945d9d9b2aff655e8339d1963a6233690b02325df3b3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "75e19722d317d7ebc0c090945672ea8d70df0662955953a45f586840323a2c63": {
      "address": "0x874E9D667c8d9486a0035d8e5284915fc64Ae8Ca",
      "txHash": "0x2d7af11644e95d7543d970951d4ca26a67cb6c618e7a43d4b85cd59b77726569",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "279d9271247224dc7cd1c579352411c304729dbc7a06a130cf1b142c98bcd41f": {
      "address": "0x9A18f07De8ccB70ca4E603F85418fB1dB451D09d",
      "txHash": "0xa9d163f1b12af1423d48ff64d4a3f894a135578c5838476c947ce556733ec390",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c34426796cf62c284ba2d68eb078fe81bbf0bd38225fb55634c9bd49627d86e": {
      "address": "0x8f44bF350E4af956D444E3526545673A881CB2AD",
      "txHash": "0xc3aa7ccf1098c7746f3e9c34ee8641b6c1405bcb8e1cdf70df3c35b71a8575c1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "21abe015a537fe224dfbc4c418e23a1e5b7c477695bc0d3e71aec674f879481f": {
      "address": "0x3Ac7e9C40444369596827399c5FcAad1Cc7a2a91",
      "txHash": "0x2aaa7f0616a54e7deb631c38f408a9a64c5e133c886f770d4ea711cdb2522d11",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "920cd4709ad0ae1c1bddffb9884b81514179ea52e928400eadef8a15150d3e88": {
      "address": "0xF5353Ad2bcA14c0C581E6665Fbf98A399F03EDe9",
      "txHash": "0xcda82e3f8f41349b48bb678f18335866e6535a38710ece8fc0e5e2caffa756e6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "34750674285eaac1826d710f8fba5b6760cf0bc11a1688de9902ae2155315a0d": {
      "address": "0x6589E4014181AC169B333782fA6Cf4a433BC827e",
      "txHash": "0xfc612b5e0be3bb1e63351ae273fc5d5a1e6f6fd7276ecde8987d1e9867a36b47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "649c2ef931c850886558918d4278f19448323d29e26646dc027750bf32051051": {
      "address": "0xf22cF31c0e87a160be0bb2AA9CE07aA8e2A3bE66",
      "txHash": "0xa4578ea86354a94aaa86aa42cdfec0e00015c06f7617d3555a9f2e4fe4ccb3bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "38b34c83603286544201b8468fb32b363d64785e1d57d5f43292fa18dff411de": {
      "address": "0xE1F29C1217f04E6B1740BE4b13499Ad07D0D7583",
      "txHash": "0xceaca624d545ce3273e9d051756ae609e1304d0814c84cf6fe26fe0c73ade832",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "53c665702282510ba7f6e024f797871781fcc47a52222985685bda03f1491c73": {
      "address": "0xD54B1E8d926b871855182ad4Ce6544A9B26D2700",
      "txHash": "0x6fd1b49725494bb1f5a38f0bdb02768f8abcf9fe812e78067a3d2ed0b93dc84c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "12ef892691441fdae6cdecfe0f09f92362e43f2b39ba7c08b0f2f08d8def43be": {
      "address": "0x27e3fE16594D116dB2776da31fc17c0F6e3fE2Ba",
      "txHash": "0x5a437f061f3fbcb79410c6c217d2afcf708c3e7ddf67c93faca9090ea55ab7c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ef93dd779978a136582f25b83424979365acda79cb739c4a486f8af29c194ab5": {
      "address": "0x4aAFdF690Bba3C95850E918F971D03218F5ECa5a",
      "txHash": "0x351b0f8fa3b3f40c467ff61c279d3f8400545f737c10d768bca7a2ed31a1d9cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c07635c8fa715095941381a4971a29787db476582846411e157bad75ca8bbcea": {
      "address": "0xc28e5b6CB056463DF983268DFE46e822D7cC55E3",
      "txHash": "0xd0fa766c1ece8773629b3e67d9bba4db41067a9317d2091bc45cabefe93e8670",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cd0b6613f05bbae06c387d908a3136e9d95319f7126c8c3015baec6514b89004": {
      "address": "0xAa1D0CD25783d19229d200AaB3fd4646f20ad365",
      "txHash": "0x2d8576a7803fd9316ac189d49499ddb43435f3c73aedc1d317d20a7f4326cee6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f3b78c43bf4ce35cc98ddcaaa7f0c3204fb191126e464f54f1d6a4f4d9b01b30": {
      "address": "0x3f582E662b4eb18Fd80D3d4d9F6C5bCB32afFA93",
      "txHash": "0x379b03eee5b79bcdbe3a5dd0d50fced18a69bad40ba491738da66a839baad6ff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveBorrowCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)13880",
            "src": "contracts/conditions/defi/aave/AaveBorrowCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)13880": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "29c3c1dd177548c0ca721c1e659c5d0073418da28cd0fc72278930e5bc151b6f": {
      "address": "0x8d3747C0A39B630eE95Ba81E32022e6d354dFbef",
      "txHash": "0xa9e6c5fbd795733b0fd568d385dd1453b98bbbe72a6ffe81768c5cd439a0ba3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AaveCollateralDepositCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)13880",
            "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)13880": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cc9ef18fbf84a8d2e06f454211e00be43ab27beb3112945f52991a22decc0381": {
      "address": "0x598c50fa374534E02A6cb273C2A8c247EBa26F1A",
      "txHash": "0x8cb62bea89734ceb967f06272e6bcb112624d8656f9cdebe5a642dfd9a9fecd9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AaveCollateralWithdrawCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)13880",
            "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)13880": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5660f92e5e613b9d37a72e8d03488b36917d47d3c17422943b596deddc26a31c": {
      "address": "0xCCA2682f0dBc8cb786613F5532900360d6E479F9",
      "txHash": "0xbe888a0e9b0e54ba017c438f1d22cc93f62d072454463a43db4225975b4f05fe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveRepayCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)13880",
            "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:23"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)13880": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5f011c6fd7517f2146ea9064c014404fff7be9918a75e6ac83be5ddac4705ac0": {
      "address": "0x83820193991791278764b6eA835875e558Ae16ab",
      "txHash": "0x765cb1db0a32054d3c71b965d409faa47caa0c48389ae19c80dec355f788cb60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "agreementList",
            "type": "t_struct(AgreementList)6336_storage",
            "src": "contracts/agreements/AgreementStoreManager.sol:47"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/agreements/AgreementStoreManager.sol:49"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "templateStoreManager",
            "type": "t_contract(TemplateStoreManager)22183",
            "src": "contracts/agreements/AgreementStoreManager.sol:50"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/agreements/AgreementStoreManager.sol:51"
          }
        ],
        "types": {
          "t_struct(AgreementList)6336_storage": {
            "label": "struct AgreementStoreLibrary.AgreementList",
            "members": [
              {
                "label": "agreements",
                "type": "t_mapping(t_bytes32,t_struct(Agreement)6317_storage)"
              },
              {
                "label": "didToAgreementIds",
                "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "templateIdToAgreementIds",
                "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Agreement)6317_storage)": {
            "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Agreement)6317_storage": {
            "label": "struct AgreementStoreLibrary.Agreement",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "templateId",
                "type": "t_address"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_contract(TemplateStoreManager)22183": {
            "label": "contract TemplateStoreManager"
          },
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "07ddb6a8940bde58bd574adb867337a8896269685444eae2f248997b1693af2b": {
      "address": "0xF1FfF221360983BF01eccFb0B71F09A333Aa4c28",
      "txHash": "0xe8b6c8c191a7dd379f666d9d1aec759b00b6c114ae600db138a94cdf3c5b7776",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "LockPaymentCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/conditions/LockPaymentCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "4c8c9f87d538a34671fd388236a9562873364b20acd2223408940f0f8064f3bd": {
      "address": "0x1EFe7FdB7cfa5D086faf41211251f15875dC92B8",
      "txHash": "0x5c80bbd0623c645a8f6df7798d8c32a53c0efa8da0c96f5bdef2eb0b10d66676",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "TransferDIDOwnershipCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/conditions/TransferDIDOwnershipCondition.sol:22"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c41af33f45b4199ecf22678d78193e08b1fa03c31a1d90210126346a57d2bd14": {
      "address": "0x3B7A4DB2223f0113FCA2154da795ad1425C453BF",
      "txHash": "0x806bb7fa538e6c83d594e3b0a76efc114f39fd931fab1606d06c47888a403ebb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "nftPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)10151_storage)",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:28"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)10151_storage)": {
            "label": "mapping(bytes32 => struct NFTAccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)10151_storage": {
            "label": "struct NFTAccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "df3a35c349e23921975883de8a2b677b076fff5c75a2fe89183a282f6924f1bc": {
      "address": "0xeE3fa431531b2F84863A25F5684e45E9CD4d1560",
      "txHash": "0x2fdb93eb4f11eeba23827ea10e2ff5dea6ee5f82aae2ff16d3999c2e2cc9be7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessProofCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/conditions/AccessProofCondition.sol:34"
          },
          {
            "contract": "AccessProofCondition",
            "label": "disputeManager",
            "type": "t_contract(IDisputeManager)7252",
            "src": "contracts/conditions/AccessProofCondition.sol:35"
          }
        ],
        "types": {
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(IDisputeManager)7252": {
            "label": "contract IDisputeManager"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a1c0abecfb30b1a2f1137977be5444c3f7021b12912f0b7d2b3bfcc80405c5c3": {
      "address": "0x46ad0C325D533AE4FfdC35448A12c46E0aB1A7d9",
      "txHash": "0x55fa396f410bef5a3767e74cf50364992a0c289ce5e053216eb45ff23e279da2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTHolderCondition",
            "label": "erc1155",
            "type": "t_contract(ERC1155BurnableUpgradeable)2026",
            "src": "contracts/conditions/NFTs/NFTHolderCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(ERC1155BurnableUpgradeable)2026": {
            "label": "contract ERC1155BurnableUpgradeable"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6de8c0f91a6857b137c5e044e70038c4238e9e35cfe43f0cf98865fd791f79c1": {
      "address": "0x2CAa9D954ED5B0138DFD8A5702C5189C4095B1CC",
      "txHash": "0x466db0fef6628e85b062e499d246b7767f0ea3369dc440608684a67ceb7f9ac0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "TransferNFTCondition",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:26"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "d574554d45575e05da00fc7e36c40d68d92009eae37df15c9451359154019770": {
      "address": "0xcD05a49c8921F68F58cEbC4b0c2efFb3d29Bb64F",
      "txHash": "0x11861637945f351d46869e1d055fc7225d4a1869df3ca33c0b006403c53968f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "NFTLockCondition",
            "label": "erc1155",
            "type": "t_contract(IERC1155Upgradeable)1929",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:21"
          },
          {
            "contract": "NFTLockCondition",
            "label": "lastData",
            "type": "t_bytes_storage",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:28"
          },
          {
            "contract": "NFTLockCondition",
            "label": "lastOperator",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:29"
          },
          {
            "contract": "NFTLockCondition",
            "label": "lastFrom",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:30"
          },
          {
            "contract": "NFTLockCondition",
            "label": "lastId",
            "type": "t_uint256",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:31"
          },
          {
            "contract": "NFTLockCondition",
            "label": "lastValue",
            "type": "t_uint256",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:32"
          }
        ],
        "types": {
          "t_contract(IERC1155Upgradeable)1929": {
            "label": "contract IERC1155Upgradeable"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "444a5bf41d7bdeee4463043e00e3c9934043be94535aeb00a9d5a8723870d023": {
      "address": "0xb4824B52AB586f81E3b1596A29dc6F98a655C0CC",
      "txHash": "0x322ab2c2f4e086cfc19cb6864233df378adc7264b52a3e5378a9d20ab4433fd6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessCondition",
            "label": "documentPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)6987_storage)",
            "src": "contracts/conditions/AccessCondition.sol:37"
          },
          {
            "contract": "AccessCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/conditions/AccessCondition.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)6987_storage)": {
            "label": "mapping(bytes32 => struct AccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)6987_storage": {
            "label": "struct AccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4dd80c9df8d525e6601721bcf8f631f9e685b6cf7bda53fc2f954b977b2ab079": {
      "address": "0xa9537D819032fCac463620c3551a2deE85DfBc57",
      "txHash": "0x60750fb3e4f24bf8bcecb3718f3a65839e53123e3b2b2839ab239e71e9d89447",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "computeExecutionStatus",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:28"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "579c3c52378db66f2ba4e955422406c9093cd5710c59c57f5f14e07d419f38a8": {
      "address": "0xf3C6B8A1D9e110f5B2C137f84D7712392DE17783",
      "txHash": "0x440e222ff8885ebf20d83c166aa779bef6b8a40cb18515de5bfb4cc4f4d4cb0c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:26"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:27"
          }
        ],
        "types": {
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "83ee119057a4a703a35e52eab3470fb6eab0bdba65a3bd0e7cde5343cc8d84f5": {
      "address": "0xF17ce7ada1Db0F361c1a20DE4671B31a7d89150f",
      "txHash": "0x432aeed8fc2a80c44d41a607ee17edb0b0b09ac194a78d762e539d82e4daa4ec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8549",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)13880",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:23"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)13880": {
            "label": "contract AaveCreditVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8549": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "addc2c05886486c28d18eed46ec03850bb10de6f8e7f2719037bb6a89f4f1a88": {
      "address": "0xB2Db41B3Cc2f94acF49656B8677e29174BA27592",
      "txHash": "0xa8ef229fa9c3dc0e48b3e6775f1dc4a6dc9ca9927534ed9be24bd9d71b9a4286",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ef79ea9a23b372449522c63e6f0f9dc7e2dfe96377bf6ae8c9847c5f3a92cd2f": {
      "address": "0x9Ca2979C7419D438c5fD16B17Ef77034f31c1C6A",
      "txHash": "0xa6c614046e2e50251f9828638886d0a1d10981fe14b7578f398e33c011723b3f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a693e3728e27f555808fa9672657424fa91c9e187d288656e1bc58e8daf4331f": {
      "address": "0x398c113f92dA2E1D248E829267Ec48A3F6D08B79",
      "txHash": "0x53b5f5269d6a2412bdb0a22345469cf31a9d45230455825880a55052372b78ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)19503_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)18684_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)23727",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)23940",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)23727": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)23940": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)18684_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)18675_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)18675_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)19503_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)19497_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)19497_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ed87aa07cc3f9a4cb31a2770c10acf35cdf147f1c1e40bf68ddc4731a1e1c79c": {
      "address": "0xb534DF9E7c24390511cf3cFE38aa21d72b1D0c56",
      "txHash": "0xe99dc839ee08f47c17095ede6b5cce11c2a806e11c85c5ccb9cd866626af246c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:34"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7810_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:35"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)16056_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7810_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7795_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7795_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7795_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7783"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7783": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)16056_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)16047_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)16047_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1998e71074ee99e5add9d0cf02187360a104e92fa2f1f78873d6b21a3307b44e": {
      "address": "0x54134f946CDDA8E7c46251702d16a8522d3E81F1",
      "txHash": "0x37b96b707b43e4c06603388b3ca2a8e2f98f45718ebe0cb208d0458aceb7084e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)20849_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/templates/AccessTemplate.sol:39"
          },
          {
            "contract": "AccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(AccessCondition)7234",
            "src": "contracts/templates/AccessTemplate.sol:40"
          },
          {
            "contract": "AccessTemplate",
            "label": "lockCondition",
            "type": "t_contract(LockPaymentCondition)9289",
            "src": "contracts/templates/AccessTemplate.sol:41"
          },
          {
            "contract": "AccessTemplate",
            "label": "escrowReward",
            "type": "t_contract(EscrowPaymentCondition)14624",
            "src": "contracts/templates/AccessTemplate.sol:42"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(AccessCondition)7234": {
            "label": "contract AccessCondition"
          },
          "t_contract(LockPaymentCondition)9289": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)14624": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)20849_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)20840_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "94ce7b33974cae0ac8ea2ff70fdc45b14875e953a334ddc7696337fcf6d54949": {
      "address": "0xcDD6607F78d3154D5f721AE2e28965149AFDF01A",
      "txHash": "0x4e66bb6749d3701c6f152d76594b78843eb5e1e664577a613c6bb3396890c664",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)20849_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:38"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "computeExecutionCondition",
            "type": "t_contract(ComputeExecutionCondition)7696",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:39"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9289",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:40"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "escrowPayment",
            "type": "t_contract(EscrowPaymentCondition)14624",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:41"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ComputeExecutionCondition)7696": {
            "label": "contract ComputeExecutionCondition"
          },
          "t_contract(LockPaymentCondition)9289": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)14624": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)20849_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)20840_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b39341016a365d4bb6b12fdd7cd1cc6d6f712df153fa515a7c7f801520aa3baa": {
      "address": "0xcF6B4B768e79021735f6f93991B889B8d01f9761",
      "txHash": "0xc11928655c05221078a647291dfb41c6a48050b193d15f4e4167ed5e81038903",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)20849_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/templates/NFTAccessTemplate.sol:35"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "nftHolderCondition",
            "type": "t_contract(INFTHolder)9650",
            "src": "contracts/templates/NFTAccessTemplate.sol:36"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(INFTAccess)9603",
            "src": "contracts/templates/NFTAccessTemplate.sol:37"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTHolder)9650": {
            "label": "contract INFTHolder"
          },
          "t_contract(INFTAccess)9603": {
            "label": "contract INFTAccess"
          },
          "t_struct(AgreementData)20849_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)20840_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c1cc3c5a61d510db75092a7af15023c54517da6fb3e9352e43d03dff699f1840": {
      "address": "0xF6C34d007d8027eBe94465bd090B2Ffb0A347EdA",
      "txHash": "0x050a645c1d620788e0b8a7bd96d9360eac4043c2c2f43addefe92fb67a29598d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)20849_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/templates/NFTSalesTemplate.sol:35"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9289",
            "src": "contracts/templates/NFTSalesTemplate.sol:36"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "transferCondition",
            "type": "t_contract(ITransferNFT)9756",
            "src": "contracts/templates/NFTSalesTemplate.sol:37"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "rewardCondition",
            "type": "t_contract(EscrowPaymentCondition)14624",
            "src": "contracts/templates/NFTSalesTemplate.sol:38"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(LockPaymentCondition)9289": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(ITransferNFT)9756": {
            "label": "contract ITransferNFT"
          },
          "t_contract(EscrowPaymentCondition)14624": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)20849_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)20840_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0d021fa5e06867614c9849aaa32050263a41ae39c54979e93578549d330afc04": {
      "address": "0x70D27F50B816d477357E0990DAFFD60De6241976",
      "txHash": "0xa2055a4aebd3e0e4b061d81dd9e4b0cd3bed86217ad73a47d2a8406eb0d34ba1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)6961",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)20849_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)18639",
            "src": "contracts/templates/AaveCreditTemplate.sol:34"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nftLockCondition",
            "type": "t_contract(INFTLock)9699",
            "src": "contracts/templates/AaveCreditTemplate.sol:36"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "depositCondition",
            "type": "t_contract(AaveCollateralDepositCondition)12866",
            "src": "contracts/templates/AaveCreditTemplate.sol:37"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "borrowCondition",
            "type": "t_contract(AaveBorrowCondition)12653",
            "src": "contracts/templates/AaveCreditTemplate.sol:38"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "repayCondition",
            "type": "t_contract(AaveRepayCondition)14096",
            "src": "contracts/templates/AaveCreditTemplate.sol:39"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "transferCondition",
            "type": "t_contract(DistributeNFTCollateralCondition)9562",
            "src": "contracts/templates/AaveCreditTemplate.sol:40"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "withdrawCondition",
            "type": "t_contract(AaveCollateralWithdrawCondition)13056",
            "src": "contracts/templates/AaveCreditTemplate.sol:41"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "vaultAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/templates/AaveCreditTemplate.sol:43"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nvmFee",
            "type": "t_uint256",
            "src": "contracts/templates/AaveCreditTemplate.sol:44"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)18639": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTLock)9699": {
            "label": "contract INFTLock"
          },
          "t_contract(AaveCollateralDepositCondition)12866": {
            "label": "contract AaveCollateralDepositCondition"
          },
          "t_contract(AaveBorrowCondition)12653": {
            "label": "contract AaveBorrowCondition"
          },
          "t_contract(AaveRepayCondition)14096": {
            "label": "contract AaveRepayCondition"
          },
          "t_contract(DistributeNFTCollateralCondition)9562": {
            "label": "contract DistributeNFTCollateralCondition"
          },
          "t_contract(AaveCollateralWithdrawCondition)13056": {
            "label": "contract AaveCollateralWithdrawCondition"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AgreementData)20849_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)20840_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_struct(AgreementDataModel)20840_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)6961": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
