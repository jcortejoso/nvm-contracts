{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe5186A0025d24F31e6696E21A832F2c90d066a9D",
    "txHash": "0xf82cd2596ca4d2c67b0804801023fc532d5908b128eb60e6b5e91f737ce16fcb",
    "deployTransaction": {
      "hash": "0xf82cd2596ca4d2c67b0804801023fc532d5908b128eb60e6b5e91f737ce16fcb",
      "type": 2,
      "accessList": [],
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x73943d14131268F23b721E668911bCDDEcA9da62",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x77359402"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x773593f8"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x77359402"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1264,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x8d3b319a722f221983e39f9539222733bfc911cb3b092fb5fa6a794c4a31debf",
      "s": "0x76b82bf7e340606b89f0f619138b0dd5641bac92104efab8d35d16d065a6c3b3",
      "v": 0,
      "creates": "0xe5186A0025d24F31e6696E21A832F2c90d066a9D",
      "chainId": 80001
    }
  },
  "proxies": [
    {
      "address": "0x17aEAfcf9AC98b79300978B7f48C60FC26209fdF",
      "txHash": "0xdb415da278df0f0e7a0602d0b98189566b7a60a65ab071465ad4a2fce627257a",
      "kind": "transparent"
    },
    {
      "address": "0x654CAe0Aeb1f28606bbcd7818295e5B0c69394A6",
      "txHash": "0xdff80a9ef20329a7e797c5694d1fc29d522d0c4e00318d329b0122483c619da3",
      "kind": "transparent"
    },
    {
      "address": "0x73e35c8Cc3d51d6D49BFe468bd8F1Dd0a1462372",
      "txHash": "0x487dcab92eab2a0af0313a5e190d1ee78830743e5d344f70b031d27961e618a7",
      "kind": "transparent"
    },
    {
      "address": "0xf226A8f0c101311A1ecaDE9F6e84c22FD53d82c3",
      "txHash": "0x368cdde87f8bcd6ce6e5dd9122cbba537a3287aaf2c2a503e4712bb703ad875b",
      "kind": "transparent"
    },
    {
      "address": "0xCf33C195B005dC07abF13197F4Bf02259f4B1C00",
      "txHash": "0x84bb29619db29f84a456d822a262f1eda2e6dd8cfd2a67404a354204be64fcd5",
      "kind": "transparent"
    },
    {
      "address": "0xB8A9C9d40720E004eD2Cd9510667D2df8Ff57b6F",
      "txHash": "0x0476747940d46e235b328e93174ab2602fa4e31e766f5f537f39627ad1023a76",
      "kind": "transparent"
    },
    {
      "address": "0x02A121455c42E550Ffd10095bef963c85FD9b665",
      "txHash": "0x526eb1bb315a077e346edcd5342d09a33d27e8fcf3be7b7803bd7a1ebc5130cc",
      "kind": "transparent"
    },
    {
      "address": "0x48108d2AA781b5E60cFB0Fa32BA48e4c67CE428a",
      "txHash": "0x8bd7d24c17b4d8a0a1fed8c0b661494b22b9ee0ad49ecebb0fb5b2897d17ae6c",
      "kind": "transparent"
    },
    {
      "address": "0x82317a76F20d9C65FCebE2Cf6aa4676F6B8FC776",
      "txHash": "0x11c5c3bb6f27f11a891c69ac206efb0fba077717dcb396921eb1af762412a837",
      "kind": "transparent"
    },
    {
      "address": "0x39C8589D2901e1A0DCFb06866cF925e54813be44",
      "txHash": "0x5db5a91aa16b0962d462a22204bd60e5ed8221219d5d18cdbfab5a50e8d0a104",
      "kind": "transparent"
    },
    {
      "address": "0xbf7Aada54cBbb0c6E08DAF189D216284604ebcFF",
      "txHash": "0x12ee7b2401e0e651ded6fb1e2253e90ee20018eb6a8330e30f104da5ffdf9c09",
      "kind": "transparent"
    },
    {
      "address": "0xC90d81833D3Bd2f3Bee10af90A53288a01Adf91f",
      "txHash": "0xa514976073e6c78f59723eb7a64db16481524798a603788539b1234921502435",
      "kind": "transparent"
    },
    {
      "address": "0xD8893347F3282e6fc2c298a82c2f8C36b650Bf1E",
      "txHash": "0x5e870a2860b574b8e5dc4a37446191eac3833bf489aa609ed8512ecbc9b1e942",
      "kind": "transparent"
    },
    {
      "address": "0xbB28ef39BE27555Fad62CF02B0e6e1d34Cd975f6",
      "txHash": "0x5a1aebdc5473bdfe43b9c1de07b05df3254afc25eeab885d3718e0a386202cca",
      "kind": "transparent"
    },
    {
      "address": "0xcbe73345B57b9430a4bb4D71c9337e18e907E63a",
      "txHash": "0x1943a89b355610fbe75cf1020ddf293a0872acf86fa5ebff3b72ea96de9ce1fd",
      "kind": "transparent"
    },
    {
      "address": "0xfb151AF6b0Ac3872D6c995F8A1F40c53d7B4021f",
      "txHash": "0x717fe696970c9d68ad2b10e58231fce7345bae9c8c9dfbfdd9bdf258333e1376",
      "kind": "transparent"
    },
    {
      "address": "0x9721Eb8933f9c971c2248e4C85CD73B282b2b203",
      "txHash": "0x43129d9bf36878956ed8696a06c2482f88f6c00c31edd010d8ebb9e623e6019d",
      "kind": "transparent"
    },
    {
      "address": "0x1E35aCFE7d80394fc6DF5c244431E921400b1540",
      "txHash": "0x3e30182ffdd03cc386de899aad55428b7427d2f15f8dab24f16bc15feccf2d54",
      "kind": "transparent"
    },
    {
      "address": "0x39a3b541f6c7671B6Bc8F41316c72Bd6d493A40B",
      "txHash": "0x279dab5c4cd9252eae3876cc8b4932aa18e304f08b6946b025615d30c34a17b6",
      "kind": "transparent"
    },
    {
      "address": "0xeaE26794aBbA8a6E58Ba42E9dffB8E819Ac7acaC",
      "txHash": "0x992fdd43fb424b56f7ac057598a2da4452fe8ba446e30a1c6b998ecde88b72e1",
      "kind": "transparent"
    },
    {
      "address": "0xDD95f952a11175e04740163CFFA0B374B8CA4f86",
      "txHash": "0x53140716930f79f6716b9796500f567cd506c3bb3fb833f8a25cda5b06f27560",
      "kind": "transparent"
    },
    {
      "address": "0x2936ddB3623857ec72fB44efc0e81cE3cCb63f19",
      "txHash": "0xc850ca6f8d651d576ca5b7b825cb6688e695e9bea1cb41ade35bda5ac4e03b8d",
      "kind": "transparent"
    },
    {
      "address": "0x9bD377D32Af3B4d98E9265729643e39ABA45ad45",
      "txHash": "0x18417467611748f344545703bd361810f772c75ee37c2f24b37fc6888b9d7903",
      "kind": "transparent"
    },
    {
      "address": "0x8991b4376B39ABEa88aA0348b09769a482a43cE4",
      "txHash": "0x5785dd76056daa3868ade92c3e696878bbb202e77d85d87eb4b81d5d7b5c1174",
      "kind": "transparent"
    },
    {
      "address": "0x27fF820C096082E63f1cf83bC4091De8C6E53391",
      "txHash": "0x858e776f5def52c4273545a9d09e4952e0c159555f4502dee27d9897375ff9de",
      "kind": "transparent"
    },
    {
      "address": "0x3683d0e9D65d22b6227aAD5719Bd53647289b1e1",
      "txHash": "0x07b323c5401e6e9fb5bc72099f1db24121eab1e3292af9ae208a638a257eff19",
      "kind": "transparent"
    },
    {
      "address": "0xA79BE4ABaA393Be8B2Df0cCeb2c81582Ac114468",
      "txHash": "0x735fac4fd7742d575dc7d2f8a76dc36039a8cdacd097b25c422ea88fbc74af50",
      "kind": "transparent"
    },
    {
      "address": "0xbb23F37938288e56F17813e76Cb9239F918E6257",
      "txHash": "0x5a1aaa0c690a9afa431bd21dd34d182ae3b6dd9b667ad885216c7fda29dc5b58",
      "kind": "transparent"
    },
    {
      "address": "0x629263cfA67320BB4f16c54f1935ebBa048B8c3f",
      "txHash": "0x1ba9fdc98c2f840cbbbafbeb25458d27cd92831ee3c65d50feadd5f637a98fa9",
      "kind": "transparent"
    },
    {
      "address": "0x41010985b53fB92CF65B138fFE35aF00eF689f47",
      "txHash": "0xa028be2fd87c8a198fe9997b8ed00c24f6f91519f0c70694d500ecbf68af8997",
      "kind": "transparent"
    },
    {
      "address": "0x185628FE4E3E03f1FC4a450F811b079A4964740d",
      "txHash": "0x761389667d9f91f59aad82f4165cd3fd78810dea20e32e78b066ed9d7fbd3c2b",
      "kind": "transparent"
    },
    {
      "address": "0xa02dEE32BCcFCf2C98D6d49cdfD61ae2E502E537",
      "txHash": "0x8eb3224bdec7a9bee3adc1c9a7cf3ee08a3d3266ee1799f8934ee7e3782740ad",
      "kind": "transparent"
    },
    {
      "address": "0x2DfA04a2570cbe53D8dc89129A6169c7FCE336AB",
      "txHash": "0x5041f6ed7a006c86c6bdfd2e3f66e4933eaf8fc1f836688341d831f7d4f6cbe9",
      "kind": "transparent"
    },
    {
      "address": "0x0A1a726C531ED11Ea68E0f1C8F17d11cA46c17d4",
      "txHash": "0x989108622ece4cd6e3b111995c933b4dd194473fbb596158ca55554ce195046e",
      "kind": "transparent"
    },
    {
      "address": "0x214f7BdAf171FEF5E907525D21044DE54fB4d165",
      "txHash": "0x81338db305bd2de4c94d56563beb1a2daf019f35793b9a50ce5449999a2f1f9f",
      "kind": "transparent"
    },
    {
      "address": "0xfD8040A96Db8C4AE4e2bD93Dc178471De2852Dc2",
      "txHash": "0x5cf0779766d84c7654f49cb8c9285be25181ddb544c08fdf562b0f8fc0d2469a",
      "kind": "transparent"
    },
    {
      "address": "0x86d4c7FB166D607636aa7c63726Cb817CD7c4409",
      "txHash": "0x65ea8eb4b1ed1d6d1d992ddfda111ab368a8183e888166941b91a591d108b246",
      "kind": "transparent"
    },
    {
      "address": "0xb47F3766f634035C7136f3c8b3129334e3CE084d",
      "txHash": "0x0064a792a8dc5e893d1e6f1f643618451a3a890746dbd181ade81a5a7aad7101",
      "kind": "transparent"
    },
    {
      "address": "0x96CA9c9C32C811E433ff18466d6aCAe32f1d9B5B",
      "txHash": "0x4207143fdda3ba9c6cc7afe0bb106e994879a98790ac84f2eaef47e95953c3e4",
      "kind": "transparent"
    },
    {
      "address": "0x808B946ef931238F63FAd63bef6E48F7a7a56d87",
      "txHash": "0x603d4bb39b42972d63c9de596e3bb9de11ab85b97f89d1ec11a597b74060c181",
      "kind": "transparent"
    },
    {
      "address": "0x22f7ec2bB9efe58D6128C615e6F752DBF31568Ab",
      "txHash": "0x0d5eac15a8c2aeb2da9a66b7224dc2fef3cb59319b818318637fd406d14d23b0",
      "kind": "transparent"
    },
    {
      "address": "0xdA0F96eAF4Da21cceCAb7ba3A4e3Abe81B675e6b",
      "txHash": "0x49df0b37af51ca7d649bd218486b2f4fa7c0660b1c70eafee3f5e66e92575e36",
      "kind": "transparent"
    },
    {
      "address": "0xDdD54af82CF7959A7FC51081aFc0D63d60Eb42E9",
      "txHash": "0xb8fa210f5911cc861e68388aee12fcfa4166bc9e0052edbd1b302e6480ac35de",
      "kind": "transparent"
    },
    {
      "address": "0x416E4D8e3B1786b86A7B66182eA071377AaCD949",
      "txHash": "0xd5fe94cc113c547ae3545d67071392fd7b9ab772bd002ed0e0fae05114c9c112",
      "kind": "transparent"
    },
    {
      "address": "0xE4DCb428A43147D5b6F55fCf2126B1Ac025D90bA",
      "txHash": "0x78919842c80a9bbca2f42d8815f1674df4a8e34f660d090d20567ab49d7b946d",
      "kind": "transparent"
    },
    {
      "address": "0x3b3E21B9f2693F71D49662637B3a76c2feeDD29A",
      "txHash": "0x9fc63ca532fa0a2a9a4ed78a2ff7ccad23633d78fa9bf4ed48724127ecd39fc1",
      "kind": "transparent"
    },
    {
      "address": "0xfD6EF09cD0bce14C500C0638e1Bfea95ea14B97B",
      "txHash": "0xc5d8838488758fb15e6cb6d650776d3700d67fe12728080066fe687d3461eb21",
      "kind": "transparent"
    },
    {
      "address": "0xf56067E603167d314fDa5432bD9B35b6f943183F",
      "txHash": "0x62c19bce6716f99e9f3fededd448290528ff66cdf5f01b91b104b6d926c05705",
      "kind": "transparent"
    },
    {
      "address": "0x87699B40c6FfB3f98b07A58c7De033DfEdD15A2c",
      "txHash": "0xfb651308affe305d152532d733fbe50a7025d80057c35a229d8944ca2e609253",
      "kind": "transparent"
    },
    {
      "address": "0x40b69aB1bF3Ebd85a457bA0C06F7Cb249517AA95",
      "txHash": "0xaeb9b9418073cc19d08ae89e3ba56f0898db740f4d655821288dddcd33ea391d",
      "kind": "transparent"
    },
    {
      "address": "0xECF1e8c626ddeaE3260e2AbfE53447E939Ca30F8",
      "txHash": "0xb284b3f3c5e2233bbe71b5203edbcbf2780185cbdeefffaca6461dd0e5f941c5",
      "kind": "transparent"
    },
    {
      "address": "0x68dD1018017ac496F1f5Cc20E5e85e296Ce5d62a",
      "txHash": "0x5b9ba697dd1684a97a7f5c120d32e8034ce5348e3e4f3e4cec68d40f90121e59",
      "kind": "transparent"
    },
    {
      "address": "0x85ddDa67C79FE263E1149A0307850C291b083Fe6",
      "txHash": "0x0c454bfa7395d5f265f078fa81b6033d2bb1ae1b1194d7feb5afde20033558b0",
      "kind": "transparent"
    },
    {
      "address": "0x945640C6c957CE2c485A5226bA5C3B0BB0BDC95C",
      "txHash": "0xd5c97b98133d47cacc4dc09340da5162f33e1cf1a1b122365f5cb9957f17561a",
      "kind": "transparent"
    },
    {
      "address": "0x82883682842BDfb0F8857d8bfb3a8Eec125b15EC",
      "txHash": "0x52a6cc8e6ce62ea3d392667bdbda339b962ad0fdb8b607d7e96b2f31250d03f9",
      "kind": "transparent"
    },
    {
      "address": "0x43138F5BA8Cf6289c7cc0C5ef9A9107685cb8931",
      "txHash": "0x7d3b659cf8a1a00d569b45435a593ecb8f26b1a1842e55bc89d9b8df3ef2c0b7",
      "kind": "transparent"
    },
    {
      "address": "0xD3F86E8f4B313e966C216C97D986943837c69c12",
      "txHash": "0x90271e2222b325c2244d4b663a8c94b9c3948c95d75bcd310e70d87506c73ec4",
      "kind": "transparent"
    },
    {
      "address": "0xdf4B027dE9F763D5D93b42a792b9D434f1ECcD9A",
      "txHash": "0xd7d4aa5248a3aec219d81936a5cc17e12be5badedf47a2761cc1404a43b30cdb",
      "kind": "transparent"
    },
    {
      "address": "0x073257E693CF0712F76539d2B5398D2f39A3508a",
      "txHash": "0x724136031f77202ea433ba8791bfe851f29d8914e226c4649458e565c5642151",
      "kind": "transparent"
    },
    {
      "address": "0xcb35F43497ce1bb8d220e483f2eb044E63Eb22C3",
      "txHash": "0x5cb39d893b85b30ff74e3c9b68f6d627294d95d29fe130d5f44ad829eb8bcca7",
      "kind": "transparent"
    },
    {
      "address": "0x44351cA057d8743fB39d2Cc376937A5998E33303",
      "txHash": "0x07112feacd33886ffc9968a2590eeb47595f6891742e961773717798413c3aab",
      "kind": "transparent"
    },
    {
      "address": "0xA689E151d88D836Ea85bBd101d04E988BcE32178",
      "txHash": "0x69e9b6d279a3535287c680221539f2d32e71cfd7c6bee747e5f903b56f06dab4",
      "kind": "transparent"
    },
    {
      "address": "0xa2DCd0f3d464962CA9b41E3aA041d8d329ce26C6",
      "txHash": "0xf8628193129d7c4eebff13c4b9149b744548047e605b626e916ad4a40cff4de6",
      "kind": "transparent"
    },
    {
      "address": "0xcad0C65Ad0345976f237b67981d34b002b610397",
      "txHash": "0x751da51ceea95d6199074fbce3b03a2f2d2d5c905ab1522e2c0b8c6cba9cd65b",
      "kind": "transparent"
    },
    {
      "address": "0xcaf4C717e46459f8B6579061239291Fce4E9d5a6",
      "txHash": "0xc3fcf93246bd1eff92bf40758b0da8887d582b7921143f1bce5def412afbbce4",
      "kind": "transparent"
    },
    {
      "address": "0xef94426a0F59773FD41F95413C2993ef89A49E70",
      "txHash": "0xf94b9bba109a2a2a7c9d2045403742d1e14871712699a72733de02525f7a0cfb",
      "kind": "transparent"
    },
    {
      "address": "0xc241b431a8f168e8E170712f6660576F343dEa89",
      "txHash": "0x7d7662759c0b2bbff92c635399577580389486f014218b3ee5fe761b30f92893",
      "kind": "transparent"
    },
    {
      "address": "0x6aB2275Aa96f87e1bFf902E6aefCf8d267dEEDcf",
      "txHash": "0x9bf57d9428755f0e9546b01b300f5f95e194b016854a346b87cd5057c68f844e",
      "kind": "transparent"
    },
    {
      "address": "0xF17f815A62E6B0140FE27B398926676F95A44a7a",
      "txHash": "0x5cc6ab835fdc2635bbdac4839e997256535eb3d63b975809efd07567c24a3ea2",
      "kind": "transparent"
    },
    {
      "address": "0x97F7Fb122a1959e50e405945A4b5e58886Ae02fa",
      "txHash": "0xf37bc19b5505be8fc860f698cd9c0efd745e10c74ca950d18cd77f64918d4005",
      "kind": "transparent"
    },
    {
      "address": "0x04eb3fcDe85DDA32964B67e68b6243686ED09383",
      "txHash": "0xb39d6cc11efbc098281e412b8bbfd0c932df2ad76003e74e855249538c89295e",
      "kind": "transparent"
    },
    {
      "address": "0x3390Db0b2F386335E7eca00a162c524E09919A99",
      "txHash": "0x17e0652d92c3ceff22487de89e161d6a9700a55ec3a50b00a507868be928c5ef",
      "kind": "transparent"
    },
    {
      "address": "0xc375F44EddcFE204ad5d6cED468940007f40ADf4",
      "txHash": "0x18538a2110dd7e4c68b7af3ee62298841349283560ae673eb6f375489b9eb4b4",
      "kind": "transparent"
    },
    {
      "address": "0x5ca1E92c485dc87c412e1562F4B9724ddAb76882",
      "txHash": "0xeb9eb754d4815d8d4d0f6d943cc2560b275b41175bfe086bad01344390036a1f",
      "kind": "transparent"
    },
    {
      "address": "0xD51B97C3766431424058a605C0223fE133a342dB",
      "txHash": "0x6ac9f5a095357dce74364762c117d24a61e3c220be030f60974991248513a798",
      "kind": "transparent"
    },
    {
      "address": "0x3D81a919d733f099Ee6bD28B36575C771Da7728c",
      "txHash": "0x8ababcd858aa0aba9f59854166359a92cef5e689336f303bcfeeeff592408b3f",
      "kind": "transparent"
    },
    {
      "address": "0x99A7ee1E65ED4b6b501C188c6eB1D91e5474bc79",
      "txHash": "0xf30b07c3a040422fce9532382a58219967ec284d0089988b563b34e44bb7f9e6",
      "kind": "transparent"
    },
    {
      "address": "0x6FE4D7B76011D537CcbC58d31BB937B1B9efDa98",
      "txHash": "0xa2484b4739a4aa19c2d27354d9efd3028871de2ef909b88a492e967a7efe8aab",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f52a46c8072db1dc7ce955c12bfc232263ea92d6b1bae899c704ff3e5d0ec173": {
      "address": "0xE22AA808C39e276AcF1f7Ec260A6F895f0d682c8",
      "txHash": "0xac605c87840c6656cbbec443b66067f946c76bc537877924536645c9e9323b08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)25107_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)25110_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5b1a27e4c40b927cd7d5cfb124503d4e4273b5483fa263f4c36c12bb85de2dd": {
      "address": "0xF0228F7c24985c3Bd30FB1c14af4d40370574098",
      "txHash": "0x1d8d453aa05eb7b28ac7a64c54b969ff6897128232f1870484bc78c2a1c6e204",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)25107_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)25110_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dfeb8abaf6c4b16455998ec505f4b9f37f5c450ee3b7da34b1d8d383e7355282": {
      "address": "0xd39491082d19103b4800Ad55cbc87a335D485C01",
      "txHash": "0x81258621c8959c6446b383ef1a95c484505b503896097bfade964392c26eedfa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)20771_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)19952_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)25457",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)25670",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)25457": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)25670": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)19952_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)19943_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)19943_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)19943_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)20771_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)20765_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)20765_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)20765_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5062be1291bd5f21b44f69f706b40943b94b4b6bec304fffd9661c3418c7b450": {
      "address": "0xae04EF0724368C89bc4E48eBaaAb3287F3EEb675",
      "txHash": "0xa64c3bfdb55232416cb4df5503ed718ef9dda6f6df2f8daa7ede793ce485845c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4a91ea627c97e3eb0c14787dcba200d491df359685c631bf1654f307a38976d8": {
      "address": "0xeffE705969A6b5331591E8e0dD3A78941EcdB7F2",
      "txHash": "0xa1ba344c7ad67fa0eec68617ce3b9ca17e53acc27e2f0e223b7cb20b5026aa34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Dispenser",
            "label": "tokenRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Dispenser.sol:22"
          },
          {
            "contract": "Dispenser",
            "label": "totalMintAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:24"
          },
          {
            "contract": "Dispenser",
            "label": "maxAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:27"
          },
          {
            "contract": "Dispenser",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:30"
          },
          {
            "contract": "Dispenser",
            "label": "minPeriod",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:33"
          },
          {
            "contract": "Dispenser",
            "label": "scale",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:36"
          },
          {
            "contract": "Dispenser",
            "label": "token",
            "type": "t_contract(NeverminedToken)6388",
            "src": "contracts/Dispenser.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NeverminedToken)6388": {
            "label": "contract NeverminedToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e5a6b88abb4d0acb294854cfd2852b0f615f391d910f91aca545342e70a84562": {
      "address": "0xdA6B768F425e0a1B43838B3F5ed569ca1b524560",
      "txHash": "0x8381c20ec50d67f84e17004e97c0247456b0d8a75eaf38b9b1490a1b4171966d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:37"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7899_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:38"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)17324_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7899_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7884_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7884_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7884_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7872"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7872": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)17324_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)17315_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)17315_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)17315_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4303a991c7f427a003e254abfb02c26eefeee790535d8d251bb11af3756e7ea3": {
      "address": "0x93802e31540051DfE203aD6b366F166697bceBe3",
      "txHash": "0xb63276b4badbcdf4f3430d652779660097c147cfc7adf3f0f6186e45a396604e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TemplateStoreManager",
            "label": "templateList",
            "type": "t_struct(TemplateList)23565_storage",
            "src": "contracts/templates/TemplateStoreManager.sol:26"
          }
        ],
        "types": {
          "t_struct(TemplateList)23565_storage": {
            "label": "struct TemplateStoreLibrary.TemplateList",
            "members": [
              {
                "label": "templates",
                "type": "t_mapping(t_address,t_struct(Template)23556_storage)"
              },
              {
                "label": "templateIds",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Template)23556_storage)": {
            "label": "mapping(address => struct TemplateStoreLibrary.Template)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Template)23556_storage": {
            "label": "struct TemplateStoreLibrary.Template",
            "members": [
              {
                "label": "state",
                "type": "t_enum(TemplateState)23546"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_enum(TemplateState)23546": {
            "label": "enum TemplateStoreLibrary.TemplateState",
            "members": [
              "Uninitialized",
              "Proposed",
              "Approved",
              "Revoked"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5be94bd6b57a41e59d8fbbf5a0cdb17ffe4bafc2976d53488144050f065ebf38": {
      "address": "0x26710c2e1F83f04A3caebD9D9c05ed496A56Cae9",
      "txHash": "0x83d2a5537b9c1d61784d5e00536ee00a4fcb844be64cfb138242cbc47b4b5169",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "599d2009e6ee33577ae3fcb03ac361a3ed42861a2e4be9ea1027b704dbaa8712": {
      "address": "0xc0C8A8200cCcA06316AB59C1CB17a4bde3cd5D0b",
      "txHash": "0xb79b0d3dc20e9e6317e8d00c3f913efa93d16981dc8da36b29029f26f52ed186",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7a80cc5e2f64ad97cb5d8b81fdd3fa2e439c2d38a6b3fec3f9f10f54aaee91d": {
      "address": "0x6Bc0bf897e5032d8d1396ee9941bb7970F0e8571",
      "txHash": "0x37d7a430611c08d4f7206dd40c11ed403ae68c9702968812f85be91b870a527c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "31a5f75d4db4802ed427f711dc11337c31fd6d2254abbebf3a151aa93ee9d95f": {
      "address": "0xEc9AF2C86F38A438449FC077b0B77ca5D23AD26f",
      "txHash": "0x243b3a9a04515c95a438be81052710c3148bc9794bf7a210712b605a2b4b80fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7cc21562eb0d6aac229b3975060f0fb7d7fa648af57fea9505f0643a962c003a": {
      "address": "0x7CeF4CC8C4189Ca7Cf83e9Aa057881F35E66d694",
      "txHash": "0xa2ce435e7707a22a5f24b9379ecbd185b731deacba05585e1e0894647da30a21",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02f777ba8ee6572a354a686597117c9ed196b36a9f779c90f8dc621098e77b03": {
      "address": "0x87eE2cF1355eEc03bC3a0579890363c978d53fb7",
      "txHash": "0x556dc61773a3ee35673cf35c52639443cd89a1615b20346765bbbeb741308bbf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9e9d222ef8a74caa726a4d33614a9bc5bfc0dcb2daed2ceaea3403135d976a8": {
      "address": "0x42a8686731D5FBB02B7A2E96B0EeCB9a0D68bc3b",
      "txHash": "0x967d931318ed24546dfc1852f12df32bda1cc4ae348e43a6edf52d09059d02f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41b8d4585db8475b80c02646b1067ed2002988073d5685c919380c00e880bade": {
      "address": "0xAC9a747170cC77164BdB8540DA437EDD39e6BaF4",
      "txHash": "0x8b049c06edda22ce3abafbe364ec8e2ea97145a688c0acf7db5dabcbd3b7e47b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveBorrowCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveBorrowCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "17553319fd5940d1a3da7161b47d47f69be19c2edc66421aa1d4a58d8b50bcbe": {
      "address": "0x07a349D11927AB63B50370b8e70e3D9B5D625471",
      "txHash": "0x216290e197b77a2417cd70641a5e19d677d4f75fd3a430592dee05cff6f69909",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralDepositCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1dec13cb66d2e35c7755861d74c8d3675752d43824e0c7172ebad9e2086d9de8": {
      "address": "0x523b4651d3aC8d50908AFb4605E200EBf1Cb78C4",
      "txHash": "0x5809bd39e009ab959bcb892233c00287a8dace4fc4073c278bd92bb44a9c7db6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralWithdrawCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "afa398d2f51fffa3b18dc63c84d53da9094e7944d7d0d22135ac19c83cec0de1": {
      "address": "0x6c6dF67CB9Ba7Dd2c185c25027472c4501438C3b",
      "txHash": "0x666ea286fd6df5186f9176cd3788509597388f710e559cc1eebacd3211a1909a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveRepayCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:23"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e9ac3323f969e686d10f19f82ef1fa7b773cef9ae68fa04eb4dd01fac6e525e": {
      "address": "0x61CC2234f0B0EAC5ac1B26897245dF2eCFEf9363",
      "txHash": "0xce824c07fe0fa9d2572d7ddfb5d8d2f70145ed2505b512f2a735b30f6125de3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "agreementList",
            "type": "t_struct(AgreementList)6422_storage",
            "src": "contracts/agreements/AgreementStoreManager.sol:47"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/agreements/AgreementStoreManager.sol:49"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "templateStoreManager",
            "type": "t_contract(TemplateStoreManager)23911",
            "src": "contracts/agreements/AgreementStoreManager.sol:50"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/agreements/AgreementStoreManager.sol:51"
          }
        ],
        "types": {
          "t_struct(AgreementList)6422_storage": {
            "label": "struct AgreementStoreLibrary.AgreementList",
            "members": [
              {
                "label": "agreements",
                "type": "t_mapping(t_bytes32,t_struct(Agreement)6403_storage)"
              },
              {
                "label": "didToAgreementIds",
                "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "templateIdToAgreementIds",
                "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Agreement)6403_storage)": {
            "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Agreement)6403_storage": {
            "label": "struct AgreementStoreLibrary.Agreement",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "templateId",
                "type": "t_address"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_contract(TemplateStoreManager)23911": {
            "label": "contract TemplateStoreManager"
          },
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e07d79bbe55eef9d570baa266b2004e9607e69fe5293426b00506f40a8ea992": {
      "address": "0x4F6D7c2478324fe6e77b699C093FAd3B6f446C75",
      "txHash": "0x229453eff777f70ac4c8fb8aec86aecba86a570c8c3247f6c92fb0b2d8f243a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "LockPaymentCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/LockPaymentCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "67eb6d1b0d9aaa0f335d9d3a30a2955f07f91e4e6cf7b7a170ab114db92a7a3a": {
      "address": "0x034c21e53aca9C4368F3Aaf66F68BC3820ff19cE",
      "txHash": "0xd060db810b531c14ceb678661b73c2ef4906592d4e4c8a39d49085ec9620930a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "TransferDIDOwnershipCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/TransferDIDOwnershipCondition.sol:22"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1b8678324adda00ae648dc20cec6751cbe6119dc5af323d812b4730fb7700c93": {
      "address": "0x7d2B92Eb395b5a455081f32769d7E0AcFD8746ab",
      "txHash": "0x78b6d6707c2a81c817fa8ff4f1130a31c1a1339ccc676b1a161aaeec439f791f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "nftPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)10406_storage)",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:28"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)10406_storage)": {
            "label": "mapping(bytes32 => struct NFTAccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)10406_storage": {
            "label": "struct NFTAccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "94b04f6c275aa766195c31a900ebd17f27159805c9d52923763d1673867e5760": {
      "address": "0x68c5fA91a26761cb6E4ec3faA7E2C5a5E2eaB499",
      "txHash": "0xe7237c6a51489eaed5c82db48a0406c94abaea2b177cccd36df36661f40b9c38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessProofCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/AccessProofCondition.sol:34"
          },
          {
            "contract": "AccessProofCondition",
            "label": "disputeManager",
            "type": "t_contract(IDisputeManager)7341",
            "src": "contracts/conditions/AccessProofCondition.sol:35"
          }
        ],
        "types": {
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(IDisputeManager)7341": {
            "label": "contract IDisputeManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0f351e8b2555c12bfb056aa7378928c3d7827bc2c8daa1587d6f079e69ec08ac": {
      "address": "0xF9DcA4655Ef889051a8565EAE20dfC9c0eA210e7",
      "txHash": "0x6eadf0da5441598a51b1cd3b8703d699f786b98e919a9b385877e1cfd36605a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTHolderCondition",
            "label": "erc1155",
            "type": "t_contract(ERC1155BurnableUpgradeable)2072",
            "src": "contracts/conditions/NFTs/NFTHolderCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(ERC1155BurnableUpgradeable)2072": {
            "label": "contract ERC1155BurnableUpgradeable"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f20465df73749a9870e8d36e6fa0c2466f54cf4de921fd585d4d255d0d9be442": {
      "address": "0x52B61D8991B6Ca9dA4E918cfBAE6Ec82914C1551",
      "txHash": "0x80f4d17ed8293b8fa456ab204b9dc1aad5fe265f7ac031be20846b65ab245b0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "TransferNFTCondition",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)25457",
            "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:26"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)25457": {
            "label": "contract NFTUpgradeable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "c0bfaddc212cd7ada0cc300151c7588d2539da8f96908e927e623ab67afd8f83": {
      "address": "0x5fC2c0384595CCD35b12a3D60a1A00302BBd7cE7",
      "txHash": "0x06cc0f98a6a8beb262200edac2b53baaa4d78e6b1a6b074a0f592cf152d05e5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "NFTLockCondition",
            "label": "erc1155",
            "type": "t_contract(IERC1155Upgradeable)1975",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:21"
          }
        ],
        "types": {
          "t_contract(IERC1155Upgradeable)1975": {
            "label": "contract IERC1155Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "61d95c7f1dadab21462479c0d1924309513ac336780878cad1fd2c410beadf77": {
      "address": "0x7bAaD0301b20382aA291D618600b3f20C87a6c06",
      "txHash": "0xc14685e6b94eb72b7de5c34b1ed22e5a70cea1add3ef878521535e5521801fe8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessCondition",
            "label": "documentPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)7076_storage)",
            "src": "contracts/conditions/AccessCondition.sol:37"
          },
          {
            "contract": "AccessCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/AccessCondition.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)7076_storage)": {
            "label": "mapping(bytes32 => struct AccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)7076_storage": {
            "label": "struct AccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a17d08172043a0a3092fd4801e3bf514795fbf4db98a326bf0e93ce409d57325": {
      "address": "0x344627EAB245EaFad0bFB43dE696273D0a08e678",
      "txHash": "0x99985092a25872d5b26a14cd20716f001f3b547861dc249d30bc5d4ddc5f7f6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "computeExecutionStatus",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:28"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c8f8f0e75d1ef39622fff886254c68cf9313252c2190f148900abab91923c9b": {
      "address": "0xB212a2F44bddD524e80b856e101844cA61234119",
      "txHash": "0x8dcc9873b64b27aa5fe6411809b54015cdb5e159d2dbcfe6ffaf5a7ae3d330ee",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)25670",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:26"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:27"
          }
        ],
        "types": {
          "t_contract(NFT721Upgradeable)25670": {
            "label": "contract NFT721Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "2531be0d1dacaf8eb6ac640d6a6eea390f047baebea79641ffdf97348d1860ea": {
      "address": "0x2a39AD2acB8fc340B7eA6623ADC2D2A53dd6498d",
      "txHash": "0xceb8485122cc8f50a359b968702f1ca33d5ee1544def7c6ef804ac45844bb4b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:23"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c76c7f857c909eef9df65b4b4e78521648d384a483d7a0d995413f992b24a4af": {
      "address": "0x38f8a336b247541257D664Ce205543a34C2D499B",
      "txHash": "0x0e86aaecb575d968d73a940b27b2b901c4411b96477679cf05bdef6d1e818e58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/AccessTemplate.sol:39"
          },
          {
            "contract": "AccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(AccessCondition)7323",
            "src": "contracts/templates/AccessTemplate.sol:40"
          },
          {
            "contract": "AccessTemplate",
            "label": "lockCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/AccessTemplate.sol:41"
          },
          {
            "contract": "AccessTemplate",
            "label": "escrowReward",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/AccessTemplate.sol:42"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(AccessCondition)7323": {
            "label": "contract AccessCondition"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "760bcc31d3a927d5b59ad222cb2cc5c9fe08371eac27b27452931b6cbfc9a4f0": {
      "address": "0x551d6A1f17749e1db07f09f4C64Ce710B77D3604",
      "txHash": "0x46952ad823bc41d4922fcdcc010ceab8ff94ff531b117d018a5421c832089c40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:38"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "computeExecutionCondition",
            "type": "t_contract(ComputeExecutionCondition)7785",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:39"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:40"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "escrowPayment",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:41"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ComputeExecutionCondition)7785": {
            "label": "contract ComputeExecutionCondition"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1ff7527d25695487e87a90df6217f3ef5c882759d4e0692e19bf6d16cc19a3be": {
      "address": "0xdDD02fe2D207e8e6ECdBB7c3A27203Aa69E39C10",
      "txHash": "0x619456aa14ff5c56d0e183a2a58dc01e3bbd310943335b4bf0b07ce6e9d9b6b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/NFTAccessTemplate.sol:35"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "nftHolderCondition",
            "type": "t_contract(INFTHolder)9807",
            "src": "contracts/templates/NFTAccessTemplate.sol:36"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(INFTAccess)9760",
            "src": "contracts/templates/NFTAccessTemplate.sol:37"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTHolder)9807": {
            "label": "contract INFTHolder"
          },
          "t_contract(INFTAccess)9760": {
            "label": "contract INFTAccess"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "40e120a67363dac339071d8f0aa1b7b8b02423f247db12516d774ebb03706d74": {
      "address": "0xE75fCD72885167a144e937F073879354d724725c",
      "txHash": "0xfc9b85fc1c820cfa925b17b91a4e076f2e71815b3256f0fa7f394d63624e47ba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/NFTSalesTemplate.sol:35"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/NFTSalesTemplate.sol:36"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "transferCondition",
            "type": "t_contract(ITransferNFT)9948",
            "src": "contracts/templates/NFTSalesTemplate.sol:37"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "rewardCondition",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/NFTSalesTemplate.sol:38"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(ITransferNFT)9948": {
            "label": "contract ITransferNFT"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "443efda420062e6e91c2bf075cc9f1bbb7023d46287bb3db1edc97a4d5738fd0": {
      "address": "0xF045DD696a6e2f2c89194d44639C295150Aa0515",
      "txHash": "0xb4154d1ce7cbfc38aaed010a6b907428919492703df7ef7802167ae957040ec6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/AaveCreditTemplate.sol:34"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nftLockCondition",
            "type": "t_contract(INFTLock)9891",
            "src": "contracts/templates/AaveCreditTemplate.sol:36"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "depositCondition",
            "type": "t_contract(AaveCollateralDepositCondition)13131",
            "src": "contracts/templates/AaveCreditTemplate.sol:37"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "borrowCondition",
            "type": "t_contract(AaveBorrowCondition)12918",
            "src": "contracts/templates/AaveCreditTemplate.sol:38"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "repayCondition",
            "type": "t_contract(AaveRepayCondition)14363",
            "src": "contracts/templates/AaveCreditTemplate.sol:39"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "transferCondition",
            "type": "t_contract(DistributeNFTCollateralCondition)9719",
            "src": "contracts/templates/AaveCreditTemplate.sol:40"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "withdrawCondition",
            "type": "t_contract(AaveCollateralWithdrawCondition)13321",
            "src": "contracts/templates/AaveCreditTemplate.sol:41"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "vaultAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/templates/AaveCreditTemplate.sol:43"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nvmFee",
            "type": "t_uint256",
            "src": "contracts/templates/AaveCreditTemplate.sol:44"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTLock)9891": {
            "label": "contract INFTLock"
          },
          "t_contract(AaveCollateralDepositCondition)13131": {
            "label": "contract AaveCollateralDepositCondition"
          },
          "t_contract(AaveBorrowCondition)12918": {
            "label": "contract AaveBorrowCondition"
          },
          "t_contract(AaveRepayCondition)14363": {
            "label": "contract AaveRepayCondition"
          },
          "t_contract(DistributeNFTCollateralCondition)9719": {
            "label": "contract DistributeNFTCollateralCondition"
          },
          "t_contract(AaveCollateralWithdrawCondition)13321": {
            "label": "contract AaveCollateralWithdrawCondition"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a83bc02472e2b565453e999a99237dcc480224a491d3b92c8b52b2ef9b53a54e": {
      "address": "0x03d99aBD9B3BdEfbEE4BeD91A18116B669c6A2d1",
      "txHash": "0xc680eba4ec25e577726f10fa2a970289d608563c80ba37d876933ec7e3071a9c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)22881_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)22076_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)27567",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)27780",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)27567": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)27780": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)22076_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)22067_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)22067_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)22067_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)22881_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)22875_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)22875_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)22875_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "359a698a34d5f7900f40672be377b34579cc689570d7172998fd9ce2350683b5": {
      "address": "0x88312F3d78a7fDD0F9F264a428b8267EcC66AE95",
      "txHash": "0xa0ed7e2087cfa9294b983ec7c14094b426b8deb2166e580cf91ef61a5a6c64b7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:37"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7913_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:38"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)17686_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7913_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7898_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7898_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7898_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7886"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7886": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)17686_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)17677_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)17677_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)17677_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f3460d7bbebddfe60a039742b18daf810f21e47c72aba1b58e1254e39495e3df": {
      "address": "0xf1070af7cFf785e3E5d9739A7267486402AeDa7D",
      "txHash": "0xf18f78617f16f492cc078b89bcf43158ccb60b4dc9a8a77297ae2950e523813a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "868a47d0254650a068b35210f5d4da79319e0b44e97f5677c01a7652137fe0e1": {
      "address": "0xBE58696F173bcA5252dc8A413Ef6f90Ef8b52253",
      "txHash": "0x51f5f28f4d7d0d95cd151c4f3f4257da2a6c8a1b1015f430cd6cedafdcbe4dbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ea3a401623f6d05a20047e04ba4ec6bb4754e5d8daf4c8de2e529315db153ff": {
      "address": "0xfc351D8871d17BE2A7830D2Bd1Beb2419979f002",
      "txHash": "0x9643f867b6b34eecc48c9d27f8280dae8edbc6c7b1c10f67cdf136f09005144c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralDepositCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14388",
            "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14388": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ac8b1a402a5a38027b8a7aa80b232ab0b30f23cb135d2754699bc9e4d004c4f5": {
      "address": "0x7544600e4cA0cAca83B57e7e8ccbfC866C4BD2Db",
      "txHash": "0xcfd070fa9149dc5e49d90ce6fa6fe0f8800749e4f81ecabf7053fd37662425f6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralWithdrawCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14388",
            "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14388": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7283a298a15b984b40269c1a4986c4676b08716a40c712221fe32547d46aacc": {
      "address": "0x188C104d54f7e1f2D9F899A0F9c5d80723d50779",
      "txHash": "0x1b4b38d3786e2859d95655c14c8601cd98ed7fbe2ab02c9894baacbd3b28e2e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveRepayCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14388",
            "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:23"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14388": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "985a826fa1e06b73ebe21a01c2994d7907af98ada460b264d73d73de69d034a9": {
      "address": "0xdf22430ECB933e549CFFCA9D9F2aef237C88e0e2",
      "txHash": "0xdb43bbad158425c48de61b6855a735120e33c31a10d3e4e47060aea639842a59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "LockPaymentCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)22031",
            "src": "contracts/conditions/LockPaymentCondition.sol:28"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)22031": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "7b65d30fd858559c651fe6c9b3b599ab9d8dc038f34c1467b16a250a65919902": {
      "address": "0x6c59Bf31bE4722276d2dbFc4567233d0ff56c05b",
      "txHash": "0xc0a0d2b75ce8c1602d9debc87f184a8b76f48eb026a001560921c3d2858d4054",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessProofCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/AccessProofCondition.sol:34"
          },
          {
            "contract": "AccessProofCondition",
            "label": "disputeManager",
            "type": "t_contract(IDisputeManager)7341",
            "src": "contracts/conditions/AccessProofCondition.sol:35"
          }
        ],
        "types": {
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(IDisputeManager)7341": {
            "label": "contract IDisputeManager"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d44a9034fda5b25e0e16c7ad96daedc1bd1af94d46887da065344ca8f170fd46": {
      "address": "0xD0509451A15aaE1d5F62318044FC2Fda85d04403",
      "txHash": "0x114a73a4cfaea4acb2657eabc16dc0271251c89efcd591434385fb4e02e22726",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8720",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14388",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:23"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14388": {
            "label": "contract AaveCreditVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8720": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "92a952aafa3add18003aa0417548165eec5c6a5803df618d2b7ca9653e082946": {
      "address": "0x2380958Ea306C57A030eb668077DcDba8126081d",
      "txHash": "0xc19ef927fb087f3d1abc631fa7393591bd22377f23978c75cc55a7db049d01c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)24230_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)22031",
            "src": "contracts/templates/AaveCreditTemplate.sol:34"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nftLockCondition",
            "type": "t_contract(INFTLock)10120",
            "src": "contracts/templates/AaveCreditTemplate.sol:36"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "depositCondition",
            "type": "t_contract(AaveCollateralDepositCondition)13372",
            "src": "contracts/templates/AaveCreditTemplate.sol:37"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "borrowCondition",
            "type": "t_contract(AaveBorrowCondition)13147",
            "src": "contracts/templates/AaveCreditTemplate.sol:38"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "repayCondition",
            "type": "t_contract(AaveRepayCondition)14604",
            "src": "contracts/templates/AaveCreditTemplate.sol:39"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "transferCondition",
            "type": "t_contract(DistributeNFTCollateralCondition)9948",
            "src": "contracts/templates/AaveCreditTemplate.sol:40"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "withdrawCondition",
            "type": "t_contract(AaveCollateralWithdrawCondition)13562",
            "src": "contracts/templates/AaveCreditTemplate.sol:41"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "vaultAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/templates/AaveCreditTemplate.sol:43"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nvmFee",
            "type": "t_uint256",
            "src": "contracts/templates/AaveCreditTemplate.sol:44"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)22031": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTLock)10120": {
            "label": "contract INFTLock"
          },
          "t_contract(AaveCollateralDepositCondition)13372": {
            "label": "contract AaveCollateralDepositCondition"
          },
          "t_contract(AaveBorrowCondition)13147": {
            "label": "contract AaveBorrowCondition"
          },
          "t_contract(AaveRepayCondition)14604": {
            "label": "contract AaveRepayCondition"
          },
          "t_contract(DistributeNFTCollateralCondition)9948": {
            "label": "contract DistributeNFTCollateralCondition"
          },
          "t_contract(AaveCollateralWithdrawCondition)13562": {
            "label": "contract AaveCollateralWithdrawCondition"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AgreementData)24230_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)24221_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)24221_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_struct(AgreementDataModel)24221_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
