{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9679eb444797942dC06040aE7060F1F60e697374",
    "txHash": "0x6ae3b79a7f9b7ca523dd5a4c146ab73a393ffb958e2f71592c1e7fee2d4c45b0",
    "deployTransaction": {
      "hash": "0x6ae3b79a7f9b7ca523dd5a4c146ab73a393ffb958e2f71592c1e7fee2d4c45b0",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x4747eAb1698a5c72DC3fD07A3074B2E1795D7294",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x1dcd6500"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 463,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0x18fc6ba28cc21cca94eef0dd4ab82e5e8e969550802b7e786d8e21279e04d4a4",
      "s": "0x58dd09384d008961c3b48209c447f1be0fa2bf72b808eb671b4bd00062745459",
      "v": 89610,
      "creates": "0x9679eb444797942dC06040aE7060F1F60e697374",
      "chainId": 44787
    }
  },
  "proxies": [
    {
      "address": "0x1819c87769a38E1617dc4c052D0C466efc78e074",
      "txHash": "0x3999e6111b7bfbc03c42461ce6dfbebe6ab3b7139458d73b58ffe4ac52ccda25",
      "kind": "transparent"
    },
    {
      "address": "0x6B1CAAB5f88eed0E5014f2CfB233b37F25a90328",
      "txHash": "0x1e9500a9170f94ade86642dc45d2943e44cb80264eca52a82aee9ac3ea38aba6",
      "kind": "transparent"
    },
    {
      "address": "0xBC589Fc6b01E1F69A33B1D3847e22D0a3fc38fB3",
      "txHash": "0x68b71ec600d279a24d043dd6829de97bb67a665706f80f354466405845ecc800",
      "kind": "transparent"
    },
    {
      "address": "0xce820f42b0A071a1e86a841374ED383dE2cD7D6b",
      "txHash": "0xf0a98699469d612038a663c05c498b472042207deeb0d8d5f6bc512dcc3e9595",
      "kind": "transparent"
    },
    {
      "address": "0x1D0010924B82b1F0eDeB3104189507D20c6BDa58",
      "txHash": "0xef95b70bb80759e5294565f50703de944c6c0944814c012a1a82a492d6968c4a",
      "kind": "transparent"
    },
    {
      "address": "0x9Ec236225fdD3EDF1FE3255ed529b833F369A7FC",
      "txHash": "0x15e18fbbee644b75a5b9a4828ee09cc43c86593558c0b219d4c89733343c460f",
      "kind": "transparent"
    },
    {
      "address": "0xF296e76c93b2d4f164073C82De3196F4f90B30b3",
      "txHash": "0x7a5801841be9e4887137be0c9c983b6e95a4a780b8129b0408f545495dc13d67",
      "kind": "transparent"
    },
    {
      "address": "0x02cB07795649bdB4c0469a87ef58603A53d859f4",
      "txHash": "0x1ad76da48449ebee57b63280dd455b2f196a2c5f2ffda04b4a13ed4837cac7d1",
      "kind": "transparent"
    },
    {
      "address": "0xAD6E6D7671C548338966b635024366a31BDF4A7d",
      "txHash": "0xbb4e9bd5923453d851ce524f1c5c0597ed2e488c4a03bf56c86c73fa5481252c",
      "kind": "transparent"
    },
    {
      "address": "0x13862d77373cB5D79BF70e2FD1CA285d2dB3B52a",
      "txHash": "0xd6d22eb4bcf86790da360928d67b25844e861b6f054ef91e318e7feed027e3e1",
      "kind": "transparent"
    },
    {
      "address": "0x63cFA56a7Fa10f711d9036983377312A2CA63478",
      "txHash": "0xeda6df5467e6b9f327692d4b314856459009bc2a593156e2581d7088e5fed35e",
      "kind": "transparent"
    },
    {
      "address": "0x5c7aEEAb6A79899f533BEdB19621A963144846D0",
      "txHash": "0xa931b6d5617a10ff868c63542c22c366efde9aa8a31c7145bb1a3dac0f775e94",
      "kind": "transparent"
    },
    {
      "address": "0x6d36630F77DB04eb9e0EfAB1c36F22f2d5d5FaA7",
      "txHash": "0xd64ea2a3ee1b6a80b24d02e8691ef18d538c047a425bbead7f342363552059c1",
      "kind": "transparent"
    },
    {
      "address": "0xc86F3C25b8764906fE6400bc9386a761dB6501B0",
      "txHash": "0x93e327adfbc30afa0780a822610cd0274e06545a37a50330e1febce3d2403458",
      "kind": "transparent"
    },
    {
      "address": "0x766d61B0ac0B543e394ba0270d798b69273EFF65",
      "txHash": "0xd5a0061d2f16ee6398934a329583f5772a898909ef11a09dccfe6d6e507fe7de",
      "kind": "transparent"
    },
    {
      "address": "0x9B6d52cE2FBBb15aA15f443D61Cd09D7C23c5337",
      "txHash": "0xe85efb02f3157ad46728290ec03f46fca1f1d3adf66decaa62c408916ca0bdb9",
      "kind": "transparent"
    },
    {
      "address": "0xe45db70A2692C89D2d1fC659eFA038172b3eC12C",
      "txHash": "0x960e4dd25044bc1cd85070da9d18a917fcb2994e677b714608f4bf067b88cdb6",
      "kind": "transparent"
    },
    {
      "address": "0x3e12149E6ba9De5dAb77B1Ce5970cDE3c9F2D299",
      "txHash": "0x202ef51be615c3189812768a4c35a883a01d04f05b69689bd771d459c5d420b9",
      "kind": "transparent"
    },
    {
      "address": "0x221F44A3bEb21Ecc0c442573f3D4fd00bE247E56",
      "txHash": "0x162872df076afc44afb6aa6248c6ce5bbbf09cce0e6d3720a414418224ad2197",
      "kind": "transparent"
    },
    {
      "address": "0x4c99200b83F1E43af1607869ff65E4ef91aF3D02",
      "txHash": "0xf11e486c22833a33676b92634586640b3d386f6d2265718083942577a53d503c",
      "kind": "transparent"
    },
    {
      "address": "0xB41F322F94eF07E40CC60732b6a744307ae2E639",
      "txHash": "0x75ce258f1e7bb9e58340edfbf77f1d4ed999d6190cb9f788dfdacf0d07484834",
      "kind": "transparent"
    },
    {
      "address": "0x5Fc6d895c60380c4D3aC358063d4bbBeD614C4BD",
      "txHash": "0xee182918c46a8bc6557ab256a4d2b900076884f72039ce238b170a00563c6842",
      "kind": "transparent"
    },
    {
      "address": "0x44e713e955fbB5a0967760BFC73851a2EF0B7bFe",
      "txHash": "0x7909b46307fd63c5884bc26e2ca8737eb0ed5b1289ba5bca1218e4ab47428ac4",
      "kind": "transparent"
    },
    {
      "address": "0xb250f106bd2808A4aaD04BBC01361c1C5e1924A5",
      "txHash": "0x4bb1fd1028d4ab1e05980699efe48808e8aa040915ee29501a2dc2b2622e9b08",
      "kind": "transparent"
    },
    {
      "address": "0x16a79f6aA74b96f05D86D6362665ba1D28a687B1",
      "txHash": "0x2172bde8e7b6d5e98aebdb04339243c4ca0cd065c799c58f5057a02e37e9b0e0",
      "kind": "transparent"
    },
    {
      "address": "0xF512F63f037eDf6eB6Ce59c4a016C7B6aA32A3ED",
      "txHash": "0x0abc003c06de3b3625daaa75e43f930c95ea16f6b2f629505ecb4c90a913b1b3",
      "kind": "transparent"
    },
    {
      "address": "0xd1149067784D038Ae7BF43F8861109F6256fbe83",
      "txHash": "0x74fc3554b146a3c9fabe6a2d61f60577eeef27bb1041a3c14f0896c65801448b",
      "kind": "transparent"
    },
    {
      "address": "0xc3d564a6d6bC728596855F44D7cB1006fCA0C0e4",
      "txHash": "0xba09cc4414a7a8e305bdc7ff174010a8d3d0a60a3192e1819cce71bab4bcebc6",
      "kind": "transparent"
    },
    {
      "address": "0x3B716Eb3b71d92f00287BAf39FAD2009f4E7Fe60",
      "txHash": "0x5a1a852f7571e1ad7da8e6b8dcd06f74c11d020ef15075395863afce20fc5840",
      "kind": "transparent"
    },
    {
      "address": "0xd305991A67C45A911e210A75a4d00Df52473b73e",
      "txHash": "0xc24a84f40fa847c5dd26f761b2b8b44fce8b21c09cb56b7874b05926b903a24a",
      "kind": "transparent"
    },
    {
      "address": "0xB9Fff8677B7d7263Ecd5e7B54D2b2E0bE47A7EE2",
      "txHash": "0xb72aa652ae0e392e57611a006ace2ae45695afb59d26445506f727ec3fca84e6",
      "kind": "transparent"
    },
    {
      "address": "0xc1E3F3C3A2CD1617484d4205Df54b4aF25031C46",
      "txHash": "0x51c8b2b5873fb4e2d9d81fe442c422383368b967dd4bc36d40a2ce710e7c28ea",
      "kind": "transparent"
    },
    {
      "address": "0xaB4879385D2cD74aB34FE06B73cec0d9740b57Bf",
      "txHash": "0xc75971a4fb2c52c1441f588235b21c6c2cfd06c092edf01c254fc4ef7f802d1b",
      "kind": "transparent"
    },
    {
      "address": "0x837b94C142E73A947A0EA1565E81f3A35b89E5c2",
      "txHash": "0xfc9d006cf1a4081bfbca41a9d4df22dc24b6e0bbb97a3f7ccba0a93e56d7d365",
      "kind": "transparent"
    },
    {
      "address": "0xB13b8361D65142aB25f2aDEe4082E02A383AaEa1",
      "txHash": "0x5a21426edb21e198980f90d7e9bc183aa11241c593d5c030bf2336949ea70f9a",
      "kind": "transparent"
    },
    {
      "address": "0x07dec4247F4d3cFDDF33804F8d3Da966DF5919D7",
      "txHash": "0x8af854448cb6750f52a45b1bbdb7faf4f1f16ac1a01dbd1e1d3a5ff5b779cc89",
      "kind": "transparent"
    },
    {
      "address": "0xA5426071A3a63Fac4d63d02068E373CEA7eC51b6",
      "txHash": "0xcf8619979c6e56290fbdb4be298f8520b64dc9282ed55730aee433b8a9e0ddf2",
      "kind": "transparent"
    },
    {
      "address": "0x231FFEd08FE4A71365921f96D4f0d8356E451989",
      "txHash": "0xee59a14879135784e328b829a84ac12980aabe5cd8b6981373124c2bfe745144",
      "kind": "transparent"
    },
    {
      "address": "0x84dDA045C4f21733C7C384c6D9F3D4b19Fc6bad3",
      "txHash": "0xd11c11b1f730268239b0e48391d6d7c85c2da6e5de61f4afd1eb270dfb79f5ad",
      "kind": "transparent"
    },
    {
      "address": "0x777930AB87834EA164e88ff48D2026851836Bb17",
      "txHash": "0x4a9cf7beefef2f27d7f1c71d4a59876454e7d336b32c6c83cf0b054ca28bb37b",
      "kind": "transparent"
    },
    {
      "address": "0x3B900859fD9d48580E628Dfc2f11DBEEFADa03b6",
      "txHash": "0xc1ba28fcc9ff7a2d2f16a43ddd8a86d0c4cd45918698cb9592514494d73fdfa2",
      "kind": "transparent"
    },
    {
      "address": "0xaEbF9626EFd4e5e1941f9b9b632C917ab9CC9845",
      "txHash": "0x3645b5e6cf39793a4a16545aee2c2d9d108d6076d31054d608fb3b91cfbb40e0",
      "kind": "transparent"
    },
    {
      "address": "0xbc4e1C6ab16B8394D0c412f27f43368417AEfC13",
      "txHash": "0xa0b4fc62e66eb68b8f320568d1f7fc6b5af23bf1afee9041479e64d244a9aeca",
      "kind": "transparent"
    },
    {
      "address": "0x7d5bF4d317d76bCe3b7c2b0337B054Be841B48a8",
      "txHash": "0x693e174c73528d8adf8cef1abd7b8fdbad144798e3f655c12d222025187f2da4",
      "kind": "transparent"
    },
    {
      "address": "0xCba431F00477c6E2F6f5C663c7Afb87593fB55c4",
      "txHash": "0x705524c4b5bf54fe02590557d4c94945cfa7ba5fd148993d221aa82a9340569d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f52a46c8072db1dc7ce955c12bfc232263ea92d6b1bae899c704ff3e5d0ec173": {
      "address": "0x07Ed0716cE21239539b0B8f0FCba6Fce70d36085",
      "txHash": "0x69a48994759cf15c383b3a375f948144d482cba78a3e1a0c1e3e988f7a8c8a64",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:471"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)25107_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)25110_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a5b1a27e4c40b927cd7d5cfb124503d4e4273b5483fa263f4c36c12bb85de2dd": {
      "address": "0xcC57DB67549a8C0242C31A5FA276dCaf7f5790de",
      "txHash": "0xd96509bb8d93bce20e465a0c3851f0f9ad2beea8629818020a1cb189efc2b25b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:431"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "NFTBase",
            "label": "_proxyApprovals",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/token/NFTBase.sol:19"
          },
          {
            "contract": "NFTBase",
            "label": "_royalties",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)",
            "src": "contracts/token/NFTBase.sol:33"
          },
          {
            "contract": "NFTBase",
            "label": "_metadata",
            "type": "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)",
            "src": "contracts/token/NFTBase.sol:35"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)25107_storage)": {
            "label": "mapping(uint256 => struct NFTBase.RoyaltyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(RoyaltyInfo)25107_storage": {
            "label": "struct NFTBase.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "royaltyAmount",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(NFTMetadata)25110_storage)": {
            "label": "mapping(uint256 => struct NFTBase.NFTMetadata)"
          },
          "t_struct(NFTMetadata)25110_storage": {
            "label": "struct NFTBase.NFTMetadata",
            "members": [
              {
                "label": "nftURI",
                "type": "t_string_storage"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5377de4c1870444f353a76ae7dbd105eba5f54b7a74c380bd5ea7532f6e51357": {
      "address": "0xdA445ED42Bca759DCb85301478669Db8CAe07ac7",
      "txHash": "0xb4ffd486053770b1cb80ffeed02ec125396a906325ea911403475cd600f67586",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ProvenanceRegistry",
            "label": "provenanceRegistry",
            "type": "t_struct(ProvenanceRegistryList)20771_storage",
            "src": "contracts/registry/ProvenanceRegistry.sol:55"
          },
          {
            "contract": "DIDFactory",
            "label": "didRegisterList",
            "type": "t_struct(DIDRegisterList)19952_storage",
            "src": "contracts/registry/DIDFactory.sol:27"
          },
          {
            "contract": "DIDFactory",
            "label": "didPermissions",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/registry/DIDFactory.sol:30"
          },
          {
            "contract": "DIDFactory",
            "label": "manager",
            "type": "t_address",
            "src": "contracts/registry/DIDFactory.sol:32"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)25457",
            "src": "contracts/registry/DIDRegistry.sol:22"
          },
          {
            "contract": "DIDRegistry",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)25670",
            "src": "contracts/registry/DIDRegistry.sol:23"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)25457": {
            "label": "contract NFTUpgradeable"
          },
          "t_contract(NFT721Upgradeable)25670": {
            "label": "contract NFT721Upgradeable"
          },
          "t_struct(DIDRegisterList)19952_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegisterList",
            "members": [
              {
                "label": "didRegisters",
                "type": "t_mapping(t_bytes32,t_struct(DIDRegister)19943_storage)"
              },
              {
                "label": "didRegisterIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(DIDRegister)19943_storage)": {
            "label": "mapping(bytes32 => struct DIDRegistryLibrary.DIDRegister)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DIDRegister)19943_storage": {
            "label": "struct DIDRegistryLibrary.DIDRegister",
            "members": [
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "royalties",
                "type": "t_uint8"
              },
              {
                "label": "nftInitialized",
                "type": "t_bool"
              },
              {
                "label": "nft721Initialized",
                "type": "t_bool"
              },
              {
                "label": "creator",
                "type": "t_address"
              },
              {
                "label": "lastChecksum",
                "type": "t_bytes32"
              },
              {
                "label": "url",
                "type": "t_string_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "providers",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "delegates",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "nftSupply",
                "type": "t_uint256"
              },
              {
                "label": "mintCap",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_struct(ProvenanceRegistryList)20771_storage": {
            "label": "struct ProvenanceRegistry.ProvenanceRegistryList",
            "members": [
              {
                "label": "list",
                "type": "t_mapping(t_bytes32,t_struct(Provenance)20765_storage)"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Provenance)20765_storage)": {
            "label": "mapping(bytes32 => struct ProvenanceRegistry.Provenance)"
          },
          "t_struct(Provenance)20765_storage": {
            "label": "struct ProvenanceRegistry.Provenance",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "relatedDid",
                "type": "t_bytes32"
              },
              {
                "label": "agentId",
                "type": "t_address"
              },
              {
                "label": "activityId",
                "type": "t_bytes32"
              },
              {
                "label": "agentInvolvedId",
                "type": "t_address"
              },
              {
                "label": "method",
                "type": "t_uint8"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              },
              {
                "label": "signature",
                "type": "t_bytes_storage"
              }
            ]
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5062be1291bd5f21b44f69f706b40943b94b4b6bec304fffd9661c3418c7b450": {
      "address": "0x92902027Ed5e0C06f2920D0a3Fb89e32996C5931",
      "txHash": "0x43a409ddb7f6a4c8a66d903243747d796650e8807ac173a87594f2f849fe4492",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:362"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:13"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:43"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4a91ea627c97e3eb0c14787dcba200d491df359685c631bf1654f307a38976d8": {
      "address": "0xF17c0d902e615D8F05312D1f421aF2F1F57Cee34",
      "txHash": "0xe9585583e438d15d381877d05416dbe76ea84260358d263865bda4bd9895e272",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Dispenser",
            "label": "tokenRequests",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Dispenser.sol:22"
          },
          {
            "contract": "Dispenser",
            "label": "totalMintAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:24"
          },
          {
            "contract": "Dispenser",
            "label": "maxAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:27"
          },
          {
            "contract": "Dispenser",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:30"
          },
          {
            "contract": "Dispenser",
            "label": "minPeriod",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:33"
          },
          {
            "contract": "Dispenser",
            "label": "scale",
            "type": "t_uint256",
            "src": "contracts/Dispenser.sol:36"
          },
          {
            "contract": "Dispenser",
            "label": "token",
            "type": "t_contract(NeverminedToken)6388",
            "src": "contracts/Dispenser.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NeverminedToken)6388": {
            "label": "contract NeverminedToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "215b640d2622f58f85566ec312a4d50ed587a347746e4ef26c208297793ae4be": {
      "address": "0x5F0C2A5232eB4001Dfb56975E672FbF40919a2cF",
      "txHash": "0x3d9b2ef76b0be380baf626cce3c29203902ddd543ba96da47746d88ce1cd7d9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "createRole",
            "type": "t_address",
            "src": "contracts/conditions/ConditionStoreManager.sol:37"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "conditionList",
            "type": "t_struct(ConditionList)7899_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:38"
          },
          {
            "contract": "ConditionStoreManager",
            "label": "epochList",
            "type": "t_struct(EpochList)17324_storage",
            "src": "contracts/conditions/ConditionStoreManager.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_struct(ConditionList)7899_storage": {
            "label": "struct ConditionStoreLibrary.ConditionList",
            "members": [
              {
                "label": "conditions",
                "type": "t_mapping(t_bytes32,t_struct(Condition)7884_storage)"
              },
              {
                "label": "map",
                "type": "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Condition)7884_storage)": {
            "label": "mapping(bytes32 => struct ConditionStoreLibrary.Condition)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Condition)7884_storage": {
            "label": "struct ConditionStoreLibrary.Condition",
            "members": [
              {
                "label": "typeRef",
                "type": "t_address"
              },
              {
                "label": "state",
                "type": "t_enum(ConditionState)7872"
              },
              {
                "label": "createdBy",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_mapping(t_bytes32,t_bytes32))": {
            "label": "mapping(bytes32 => mapping(bytes32 => bytes32))"
          },
          "t_mapping(t_bytes32,t_bytes32)": {
            "label": "mapping(bytes32 => bytes32)"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_enum(ConditionState)7872": {
            "label": "enum ConditionStoreLibrary.ConditionState",
            "members": [
              "Uninitialized",
              "Unfulfilled",
              "Fulfilled",
              "Aborted"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(EpochList)17324_storage": {
            "label": "struct EpochLibrary.EpochList",
            "members": [
              {
                "label": "epochs",
                "type": "t_mapping(t_bytes32,t_struct(Epoch)17315_storage)"
              },
              {
                "label": "epochIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Epoch)17315_storage)": {
            "label": "mapping(bytes32 => struct EpochLibrary.Epoch)"
          },
          "t_struct(Epoch)17315_storage": {
            "label": "struct EpochLibrary.Epoch",
            "members": [
              {
                "label": "timeLock",
                "type": "t_uint256"
              },
              {
                "label": "timeOut",
                "type": "t_uint256"
              },
              {
                "label": "blockNumber",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4303a991c7f427a003e254abfb02c26eefeee790535d8d251bb11af3756e7ea3": {
      "address": "0xf7Fbe2924146251f4d6350E8E710530f27C5844d",
      "txHash": "0x109f7c400b50f018b27d759ea670edbc81b476d4cbb7e3cf00e24a4312f9e134",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "TemplateStoreManager",
            "label": "templateList",
            "type": "t_struct(TemplateList)23565_storage",
            "src": "contracts/templates/TemplateStoreManager.sol:26"
          }
        ],
        "types": {
          "t_struct(TemplateList)23565_storage": {
            "label": "struct TemplateStoreLibrary.TemplateList",
            "members": [
              {
                "label": "templates",
                "type": "t_mapping(t_address,t_struct(Template)23556_storage)"
              },
              {
                "label": "templateIds",
                "type": "t_array(t_address)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Template)23556_storage)": {
            "label": "mapping(address => struct TemplateStoreLibrary.Template)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Template)23556_storage": {
            "label": "struct TemplateStoreLibrary.Template",
            "members": [
              {
                "label": "state",
                "type": "t_enum(TemplateState)23546"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_enum(TemplateState)23546": {
            "label": "enum TemplateStoreLibrary.TemplateState",
            "members": [
              "Uninitialized",
              "Proposed",
              "Approved",
              "Revoked"
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5be94bd6b57a41e59d8fbbf5a0cdb17ffe4bafc2976d53488144050f065ebf38": {
      "address": "0x7D97c0a24975f004F9E9c4018A5e36ab70ecD735",
      "txHash": "0x935bbe72f9cb37df3ddd8724c00804b2ac7f302296db483b6643b37d71d0ecbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "599d2009e6ee33577ae3fcb03ac361a3ed42861a2e4be9ea1027b704dbaa8712": {
      "address": "0x3e7A3A376B8bf5CCA87c71beBE9982428CfcfDFb",
      "txHash": "0x9333db21e1fc41a90f41b65ab4d90af61c4808cdb67b34eb2951ba5a4b660da3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7a80cc5e2f64ad97cb5d8b81fdd3fa2e439c2d38a6b3fec3f9f10f54aaee91d": {
      "address": "0x36cbd215365879aC1E67123B58E32f451e6446a3",
      "txHash": "0x984fcf36391a803912a99e1facfe1c862dc58ddecbe7016c103b944203604741",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "31a5f75d4db4802ed427f711dc11337c31fd6d2254abbebf3a151aa93ee9d95f": {
      "address": "0x3e5F08Aa1f5dd4da9D56592580485aE39987ADF6",
      "txHash": "0x02ccc9012314b2551d5022b4ee6cab9dc7ba5e138cd1c6c9613855759a4dc97e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7cc21562eb0d6aac229b3975060f0fb7d7fa648af57fea9505f0643a962c003a": {
      "address": "0x4D3055BCc143CE3C438e6FA6A73A03d014F671eD",
      "txHash": "0xd83f62d209ec5f9b9bdd8e8ed5948cb41f64aa96f4bb5b3891dba51ff5994b59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02f777ba8ee6572a354a686597117c9ed196b36a9f779c90f8dc621098e77b03": {
      "address": "0xBF084A172FEa65d2A6a68B248DC41CADB38895F7",
      "txHash": "0x847abb62b844c42d41ed8c4d1223511d892e8df10620d56377d2b2902a2b3d49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          }
        ],
        "types": {
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e9e9d222ef8a74caa726a4d33614a9bc5bfc0dcb2daed2ceaea3403135d976a8": {
      "address": "0xd20C08B672C90eaAF8BaCcC4A6072F05Bb3F16E1",
      "txHash": "0x2fe65c533d47799b47e0c5214ccfd42bef0d3b7969426309efc9a5d93e2f83ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41b8d4585db8475b80c02646b1067ed2002988073d5685c919380c00e880bade": {
      "address": "0x05346358CDB524081513506d2aD7058A1EF178dD",
      "txHash": "0x509bf3a64a0b314e8d9fdf730eb9f8bb00139f20f7d69320fdd22a7becee88f2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveBorrowCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveBorrowCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "17553319fd5940d1a3da7161b47d47f69be19c2edc66421aa1d4a58d8b50bcbe": {
      "address": "0x81B44FaC5674bf81aEfD412d5f41619C95931829",
      "txHash": "0xfcb3d2d7a297815d1110e4d6f193b24f4dedb2f361ab5260daf4444990f16467",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralDepositCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveCollateralDepositCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1dec13cb66d2e35c7755861d74c8d3675752d43824e0c7172ebad9e2086d9de8": {
      "address": "0x668a43207473513b385822c8a042CA1c9E9328D5",
      "txHash": "0xf1db5ee367bd66698b336b84175b12ff7aad02f768627cc21e55e090b3922dff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "AaveCollateralWithdrawCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveCollateralWithdrawCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "afa398d2f51fffa3b18dc63c84d53da9094e7944d7d0d22135ac19c83cec0de1": {
      "address": "0x2f9c71122236fa2865B13Fc506aB9269248737dF",
      "txHash": "0x414fc9af7d1d41a9d9a089371428cc21ffbbe67d3cb66b1cda1216ad48581f9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AaveRepayCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/defi/aave/AaveRepayCondition.sol:23"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e9ac3323f969e686d10f19f82ef1fa7b773cef9ae68fa04eb4dd01fac6e525e": {
      "address": "0x32cF975Be47fd9574b1Ee8d225a3f2588f3a23b2",
      "txHash": "0xafb82989925aac7b350af23b741c562a09121c51c6309c290b6d08818b8d853e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "agreementList",
            "type": "t_struct(AgreementList)6422_storage",
            "src": "contracts/agreements/AgreementStoreManager.sol:47"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/agreements/AgreementStoreManager.sol:49"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "templateStoreManager",
            "type": "t_contract(TemplateStoreManager)23911",
            "src": "contracts/agreements/AgreementStoreManager.sol:50"
          },
          {
            "contract": "AgreementStoreManager",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/agreements/AgreementStoreManager.sol:51"
          }
        ],
        "types": {
          "t_struct(AgreementList)6422_storage": {
            "label": "struct AgreementStoreLibrary.AgreementList",
            "members": [
              {
                "label": "agreements",
                "type": "t_mapping(t_bytes32,t_struct(Agreement)6403_storage)"
              },
              {
                "label": "didToAgreementIds",
                "type": "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "templateIdToAgreementIds",
                "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(Agreement)6403_storage)": {
            "label": "mapping(bytes32 => struct AgreementStoreLibrary.Agreement)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(Agreement)6403_storage": {
            "label": "struct AgreementStoreLibrary.Agreement",
            "members": [
              {
                "label": "did",
                "type": "t_bytes32"
              },
              {
                "label": "templateId",
                "type": "t_address"
              },
              {
                "label": "conditionIds",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "lastUpdatedBy",
                "type": "t_address"
              },
              {
                "label": "blockNumberUpdated",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(bytes32 => bytes32[])"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_contract(TemplateStoreManager)23911": {
            "label": "contract TemplateStoreManager"
          },
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5e07d79bbe55eef9d570baa266b2004e9607e69fe5293426b00506f40a8ea992": {
      "address": "0xaf59Ad0BE77268EF294bAd9edEa099B6A7692A94",
      "txHash": "0xa9808770e1e3f727e72e19cff3d269f51c047904c405365621ed61b25d892c25",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "LockPaymentCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/LockPaymentCondition.sol:27"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "67eb6d1b0d9aaa0f335d9d3a30a2955f07f91e4e6cf7b7a170ab114db92a7a3a": {
      "address": "0xC5142f6A4225E99C762A27cF4f2104E100D63C1e",
      "txHash": "0x95e7e2282cd3c48a573945133ae433ecd35a9a6d79ba96d0bf6b9329ae37ef34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "TransferDIDOwnershipCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/TransferDIDOwnershipCondition.sol:22"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1b8678324adda00ae648dc20cec6751cbe6119dc5af323d812b4730fb7700c93": {
      "address": "0x19393D55240b0A01f30B8479E1AF17e9F41Fe883",
      "txHash": "0xcffc2d3b4ae842ec1bb6ce9a6bf43015f972580f0d79a75b5cd6ede955b65232",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "nftPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)10406_storage)",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:28"
          },
          {
            "contract": "NFTAccessCondition",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/conditions/NFTs/NFTAccessCondition.sol:29"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)10406_storage)": {
            "label": "mapping(bytes32 => struct NFTAccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)10406_storage": {
            "label": "struct NFTAccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "94b04f6c275aa766195c31a900ebd17f27159805c9d52923763d1673867e5760": {
      "address": "0x82e62828aD32c258E2d172F220f37c00098490AF",
      "txHash": "0x5ac0d7e442e12e808a5783630a952d894df3191f6d555150a8544b709724b60d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessProofCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/AccessProofCondition.sol:34"
          },
          {
            "contract": "AccessProofCondition",
            "label": "disputeManager",
            "type": "t_contract(IDisputeManager)7341",
            "src": "contracts/conditions/AccessProofCondition.sol:35"
          }
        ],
        "types": {
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(IDisputeManager)7341": {
            "label": "contract IDisputeManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0f351e8b2555c12bfb056aa7378928c3d7827bc2c8daa1587d6f079e69ec08ac": {
      "address": "0x73DdC2420A67E2155286627a2911975e40eEa5A1",
      "txHash": "0x67872b0d82a6a5885c86a108975f4935fe14c9126b483a5fec4dbe2cb351a196",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "NFTHolderCondition",
            "label": "erc1155",
            "type": "t_contract(ERC1155BurnableUpgradeable)2072",
            "src": "contracts/conditions/NFTs/NFTHolderCondition.sol:20"
          }
        ],
        "types": {
          "t_contract(ERC1155BurnableUpgradeable)2072": {
            "label": "contract ERC1155BurnableUpgradeable"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f20465df73749a9870e8d36e6fa0c2466f54cf4de921fd585d4d255d0d9be442": {
      "address": "0x00C308834DefCFaD0BF87464330B34766550E36e",
      "txHash": "0x3efd352a318640f509282ecb07bd00f1bbbbadae021bfb16bd2cfd31470a2aa2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "TransferNFTCondition",
            "label": "erc1155",
            "type": "t_contract(NFTUpgradeable)25457",
            "src": "contracts/conditions/NFTs/TransferNFTCondition.sol:26"
          }
        ],
        "types": {
          "t_contract(NFTUpgradeable)25457": {
            "label": "contract NFTUpgradeable"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "c0bfaddc212cd7ada0cc300151c7588d2539da8f96908e927e623ab67afd8f83": {
      "address": "0xf580368257888232872561331aFDfd29f43a2f24",
      "txHash": "0xcbfa34b3e966c27efbb34dcd7b33d22adb121faf9eb0bd25789d815dc40f7e68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "NFTLockCondition",
            "label": "erc1155",
            "type": "t_contract(IERC1155Upgradeable)1975",
            "src": "contracts/conditions/NFTs/NFTLockCondition.sol:21"
          }
        ],
        "types": {
          "t_contract(IERC1155Upgradeable)1975": {
            "label": "contract IERC1155Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "61d95c7f1dadab21462479c0d1924309513ac336780878cad1fd2c410beadf77": {
      "address": "0x580B8dDae35406a368870d4048eC2EB57Ff4787C",
      "txHash": "0x53b3d7ae8dc861668babeb809acbb8008457ee6b158e1b7db1e12546687b59be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "AccessCondition",
            "label": "documentPermissions",
            "type": "t_mapping(t_bytes32,t_struct(DocumentPermission)7076_storage)",
            "src": "contracts/conditions/AccessCondition.sol:37"
          },
          {
            "contract": "AccessCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/AccessCondition.sol:38"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_struct(DocumentPermission)7076_storage)": {
            "label": "mapping(bytes32 => struct AccessCondition.DocumentPermission)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(DocumentPermission)7076_storage": {
            "label": "struct AccessCondition.DocumentPermission",
            "members": [
              {
                "label": "agreementIdDeprecated",
                "type": "t_bytes32"
              },
              {
                "label": "permission",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a17d08172043a0a3092fd4801e3bf514795fbf4db98a326bf0e93ce409d57325": {
      "address": "0xaFeC763E06A7B9338f15Eca2544d2B35e650470D",
      "txHash": "0x89bbca3d2f7de470e27e8f65ea432182865e91d710bbd7d2cf00a5de5c672218",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "computeExecutionStatus",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:28"
          },
          {
            "contract": "ComputeExecutionCondition",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/conditions/ComputeExecutionCondition.sol:30"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
            "label": "mapping(bytes32 => mapping(address => bool))"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "2c8f8f0e75d1ef39622fff886254c68cf9313252c2190f148900abab91923c9b": {
      "address": "0x54589C2f19CED661d73Af8Ee13dF1Eb820F8BF86",
      "txHash": "0x98331e87755f6181944a35950223d70c765314b1bd26d0b3df1af77ebe6f9ed8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:36"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:64"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:232"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "erc721",
            "type": "t_contract(NFT721Upgradeable)25670",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:26"
          },
          {
            "contract": "TransferNFT721Condition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/TransferNFT721Condition.sol:27"
          }
        ],
        "types": {
          "t_contract(NFT721Upgradeable)25670": {
            "label": "contract NFT721Upgradeable"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          }
        }
      }
    },
    "2531be0d1dacaf8eb6ac640d6a6eea390f047baebea79641ffdf97348d1860ea": {
      "address": "0x7eadf3c8883EfaA3847A0e289F09Dd10eb08F580",
      "txHash": "0x482205f70157cfc1b04b8fd7886958e76b8bbe111c5a8f391438d3162decd85c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "Condition",
            "label": "conditionStoreManager",
            "type": "t_contract(ConditionStoreManager)8706",
            "src": "contracts/conditions/Condition.sol:25"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "aaveCreditVault",
            "type": "t_contract(AaveCreditVault)14147",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:23"
          },
          {
            "contract": "DistributeNFTCollateralCondition",
            "label": "_lockConditionAddress",
            "type": "t_address",
            "src": "contracts/conditions/NFTs/DistributeNFTCollateralCondition.sol:25"
          }
        ],
        "types": {
          "t_contract(AaveCreditVault)14147": {
            "label": "contract AaveCreditVault"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_contract(ConditionStoreManager)8706": {
            "label": "contract ConditionStoreManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c76c7f857c909eef9df65b4b4e78521648d384a483d7a0d995413f992b24a4af": {
      "address": "0x338D8600BC9777e936CA5FfA7f028028Cf021bEF",
      "txHash": "0x2a0e551dcec4ba171b6675f23d9f614ef943be28e196c77b22db0c54c249e914",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/AccessTemplate.sol:39"
          },
          {
            "contract": "AccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(AccessCondition)7323",
            "src": "contracts/templates/AccessTemplate.sol:40"
          },
          {
            "contract": "AccessTemplate",
            "label": "lockCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/AccessTemplate.sol:41"
          },
          {
            "contract": "AccessTemplate",
            "label": "escrowReward",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/AccessTemplate.sol:42"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(AccessCondition)7323": {
            "label": "contract AccessCondition"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "760bcc31d3a927d5b59ad222cb2cc5c9fe08371eac27b27452931b6cbfc9a4f0": {
      "address": "0x2627574143F92139c9C5Ce8Ec0241a299e2e2c90",
      "txHash": "0x422add279dfef64df7124b9408f7d6c87c17c115f0c2819e64bda84f8d0cb6e2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:38"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "computeExecutionCondition",
            "type": "t_contract(ComputeExecutionCondition)7785",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:39"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:40"
          },
          {
            "contract": "EscrowComputeExecutionTemplate",
            "label": "escrowPayment",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/EscrowComputeExecutionTemplate.sol:41"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(ComputeExecutionCondition)7785": {
            "label": "contract ComputeExecutionCondition"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1ff7527d25695487e87a90df6217f3ef5c882759d4e0692e19bf6d16cc19a3be": {
      "address": "0x1B72Ff4612Dc0271699063c45c1b841d1605128B",
      "txHash": "0x053d15da3d93fbc63450a91d20b0246e3415dbe47f27dca6dc18dba64ae408d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/NFTAccessTemplate.sol:35"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "nftHolderCondition",
            "type": "t_contract(INFTHolder)9807",
            "src": "contracts/templates/NFTAccessTemplate.sol:36"
          },
          {
            "contract": "NFTAccessTemplate",
            "label": "accessCondition",
            "type": "t_contract(INFTAccess)9760",
            "src": "contracts/templates/NFTAccessTemplate.sol:37"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTHolder)9807": {
            "label": "contract INFTHolder"
          },
          "t_contract(INFTAccess)9760": {
            "label": "contract INFTAccess"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "40e120a67363dac339071d8f0aa1b7b8b02423f247db12516d774ebb03706d74": {
      "address": "0xb319f17a2e61D41f4F7142528Fba1d0042c38EA9",
      "txHash": "0x5013c83a6ebe541556ddfb814aa035886fce65784a47ae622fed43df709c4f87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/NFTSalesTemplate.sol:35"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "lockPaymentCondition",
            "type": "t_contract(LockPaymentCondition)9446",
            "src": "contracts/templates/NFTSalesTemplate.sol:36"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "transferCondition",
            "type": "t_contract(ITransferNFT)9948",
            "src": "contracts/templates/NFTSalesTemplate.sol:37"
          },
          {
            "contract": "NFTSalesTemplate",
            "label": "rewardCondition",
            "type": "t_contract(EscrowPaymentCondition)15039",
            "src": "contracts/templates/NFTSalesTemplate.sol:38"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(LockPaymentCondition)9446": {
            "label": "contract LockPaymentCondition"
          },
          "t_contract(ITransferNFT)9948": {
            "label": "contract ITransferNFT"
          },
          "t_contract(EscrowPaymentCondition)15039": {
            "label": "contract EscrowPaymentCondition"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "443efda420062e6e91c2bf075cc9f1bbb7023d46287bb3db1edc97a4d5738fd0": {
      "address": "0x1B13D023522c2Ac868f81bD761294779C6229106",
      "txHash": "0xd672810a7e4e1fbaee211dbb4eb11a83d9335373e2228d8f91597bc277f6c947",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "AgreementTemplate",
            "label": "conditionTypes",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/templates/AgreementTemplate.sol:24"
          },
          {
            "contract": "AgreementTemplate",
            "label": "agreementStoreManager",
            "type": "t_contract(AgreementStoreManager)7050",
            "src": "contracts/templates/AgreementTemplate.sol:26"
          },
          {
            "contract": "BaseEscrowTemplate",
            "label": "agreementData",
            "type": "t_struct(AgreementData)22120_storage",
            "src": "contracts/templates/BaseEscrowTemplate.sol:13"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "didRegistry",
            "type": "t_contract(DIDRegistry)19907",
            "src": "contracts/templates/AaveCreditTemplate.sol:34"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nftLockCondition",
            "type": "t_contract(INFTLock)9891",
            "src": "contracts/templates/AaveCreditTemplate.sol:36"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "depositCondition",
            "type": "t_contract(AaveCollateralDepositCondition)13131",
            "src": "contracts/templates/AaveCreditTemplate.sol:37"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "borrowCondition",
            "type": "t_contract(AaveBorrowCondition)12918",
            "src": "contracts/templates/AaveCreditTemplate.sol:38"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "repayCondition",
            "type": "t_contract(AaveRepayCondition)14363",
            "src": "contracts/templates/AaveCreditTemplate.sol:39"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "transferCondition",
            "type": "t_contract(DistributeNFTCollateralCondition)9719",
            "src": "contracts/templates/AaveCreditTemplate.sol:40"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "withdrawCondition",
            "type": "t_contract(AaveCollateralWithdrawCondition)13321",
            "src": "contracts/templates/AaveCreditTemplate.sol:41"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "vaultAddress",
            "type": "t_mapping(t_bytes32,t_address)",
            "src": "contracts/templates/AaveCreditTemplate.sol:43"
          },
          {
            "contract": "AaveCreditTemplate",
            "label": "nvmFee",
            "type": "t_uint256",
            "src": "contracts/templates/AaveCreditTemplate.sol:44"
          }
        ],
        "types": {
          "t_contract(DIDRegistry)19907": {
            "label": "contract DIDRegistry"
          },
          "t_contract(INFTLock)9891": {
            "label": "contract INFTLock"
          },
          "t_contract(AaveCollateralDepositCondition)13131": {
            "label": "contract AaveCollateralDepositCondition"
          },
          "t_contract(AaveBorrowCondition)12918": {
            "label": "contract AaveBorrowCondition"
          },
          "t_contract(AaveRepayCondition)14363": {
            "label": "contract AaveRepayCondition"
          },
          "t_contract(DistributeNFTCollateralCondition)9719": {
            "label": "contract DistributeNFTCollateralCondition"
          },
          "t_contract(AaveCollateralWithdrawCondition)13321": {
            "label": "contract AaveCollateralWithdrawCondition"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(AgreementData)22120_storage": {
            "label": "struct BaseEscrowTemplate.AgreementData",
            "members": [
              {
                "label": "agreementDataItems",
                "type": "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)"
              },
              {
                "label": "agreementIds",
                "type": "t_array(t_bytes32)dyn_storage"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(AgreementDataModel)22111_storage)": {
            "label": "mapping(bytes32 => struct BaseEscrowTemplate.AgreementDataModel)"
          },
          "t_struct(AgreementDataModel)22111_storage": {
            "label": "struct BaseEscrowTemplate.AgreementDataModel",
            "members": [
              {
                "label": "accessConsumer",
                "type": "t_address"
              },
              {
                "label": "accessProvider",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(AgreementStoreManager)7050": {
            "label": "contract AgreementStoreManager"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
