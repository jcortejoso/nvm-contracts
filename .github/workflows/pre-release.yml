name: "Pre Release"

on:
  push:
    branches:
      - "master"
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Pre-install
        run: |
          rm -rf node_modules
          yarn install --frozen-lockfile
          git submodule init
          git submodule update
      - name: Compile and Lint
        run: |
          yarn lint
          yarn clean
          sh ./scripts/build.sh
          yarn compile
      - name: Run Unit Tests
        run: |
          yarn test:unit
      - name: Run Integration Tests
        run: |
          yarn test:integration
        env:
          NODE_OPTIONS: "--max-old-space-size=7500"

  pre-release:
    name: "Pre Release"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Build process
      - uses: actions/setup-node@v3
        with:
          node-version: '14.x'
          cache: yarn

      - name: Pre-install
        run: |
          yarn install --frozen-lockfile
          git submodule init
          git submodule update

      - name: Compile and Lint
        run: |
          yarn lint
          yarn clean
          sh ./scripts/build.sh
          yarn compile

      - name: Run Unit Tests
        run: |
          yarn test:unit

      - name: Run Integration Tests
        run: |
          yarn test:integration
        env:
          NODE_OPTIONS: "--max-old-space-size=7500"

      # Add the artifacts to include in the release
      - name: Set version to env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Package Artifacts
        run: |
          tar cvzf contracts-${{ env.RELEASE_VERSION }}.tar.gz contracts/

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            contracts-${{ env.RELEASE_VERSION }}.tar.gz
            CHANGELOG.md

