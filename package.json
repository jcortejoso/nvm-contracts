{
  "name": "@nevermined-io/contracts",
  "version": "1.3.3",
  "description": "Nevermined implementation of Nevermined in Solidity",
  "bugs": {
    "url": "https://github.com/nevermined-io/contracts/issues"
  },
  "homepage": "https://github.com/nevermined-io/contracts#readme",
  "main": "README.md",
  "scripts": {
    "compile": "hardhat compile",
    "audit": "npx truffle exec ./scripts/deploy/truffle-wrapper/auditWrapper.js",
    "audit:development": "export NETWORK=development&&yarn run audit --network development",
    "audit:aurora-testnet": "export NETWORK=aurora-testnet&&yarn run audit --network aurora-testnet",
    "audit:aurora": "export NETWORK=aurora&&yarn run audit --network aurora",
    "audit:spree": "export NETWORK=spree&&yarn run audit --network spree",
    "audit:rinkeby": "export NETWORK=rinkeby&&yarn run audit --network rinkeby",
    "audit:alfajores": "export NETWORK=celo-alfajores&&yarn run audit --network celo-alfajores",
    "audit:baklava": "export NETWORK=celo-baklava&&yarn run audit --network celo-baklava",
    "audit:mumbai": "export NETWORK=mumbai&&yarn run audit --network mumbai",
    "audit:integration": "export NETWORK=integration&&yarn run audit --network integration",
    "audit:staging": "export NETWORK=staging&&yarn run audit --network staging",
    "audit:production": "export NETWORK=production&&yarn run audit --network production",
    "audit:mainnet": "export NETWORK=mainnet&&yarn run audit --network mainnet",
    "deploy": "npx hardhat run ./scripts/deploy/truffle-wrapper/deployContractsWrapper.js",
    "deploy:development": "export NETWORK=development&&export TESTNET=true&&yarn deploy --network development",
    "deploy:external": "export NETWORK=development&&export TESTNET=true&&yarn deploy --network external",
    "deploy:aurora-testnet": "export NETWORK=aurora-testnet&&export TESTNET=true&&yarn deploy --network aurora-testnet",
    "deploy:aurora": "export NETWORK=aurora&&yarn deploy --network aurora",
    "deploy:spree": "export NETWORK=spree&&export TESTNET=true&&yarn deploy --network spree",
    "deploy:polygon-localnet": "export NETWORK=polygon-localnet&&export TESTNET=true&&yarn deploy --network polygon-localnet",
    "deploy:rinkeby": "export NETWORK=rinkeby&&export TESTNET=true&&yarn deploy --network rinkeby",
    "deploy:alfajores": "export NETWORK=celo-alfajores&&export TESTNET=true&&yarn deploy --network celo-alfajores",
    "deploy:baklava": "export NETWORK=celo-baklava&&export TESTNET=true&&yarn deploy --network celo-baklava",
    "deploy:mumbai": "export NETWORK=mumbai&&export TESTNET=true&&yarn deploy --network mumbai",
    "deploy:integration": "export NETWORK=integration&&yarn deploy --network integration",
    "deploy:staging": "export NETWORK=staging&&yarn deploy --network staging",
    "deploy:production": "export NETWORK=production&&yarn deploy --network production",
    "deploy:mainnet": "export NETWORK=mainnet&&yarn deploy --network mainnet",
    "upgrade": "npx hardhat run ./scripts/deploy/truffle-wrapper/upgradeContractsWrapper.js",
    "upgrade:development": "export NETWORK=development&&yarn run upgrade --network development --testnet true",
    "upgrade:external": "export NETWORK=external&&export TESTNET=true&&yarn run upgrade --network external",
    "upgrade:aurora-testnet": "export NETWORK=aurora-testnet&&yarn run upgrade --network aurora-testnet --testnet true",
    "upgrade:aurora": "export NETWORK=aurora&&yarn run upgrade --network aurora",
    "upgrade:spree": "export NETWORK=spree&&yarn run upgrade --network spree --testnet true",
    "upgrade:rinkeby": "export NETWORK=rinkeby&&yarn run upgrade --network rinkeby",
    "upgrade:alfajores": "export NETWORK=celo-alfajores&&yarn run upgrade --network celo-alfajores",
    "upgrade:baklava": "export NETWORK=celo-baklava&&yarn run upgrade --network celo-baklava",
    "upgrade:mumbai": "export NETWORK=mumbai&&yarn run upgrade --network mumbai",
    "upgrade:integration": "export NETWORK=integration&&yarn run upgrade --network integration",
    "upgrade:staging": "export NETWORK=staging&&yarn run upgrade --network staging",
    "upgrade:production": "export NETWORK=production&&yarn run upgrade --network production",
    "upgrade:mainnet": "export NETWORK=mainnet&&yarn run upgrade --network mainnet",
    "test": "hardhat test",
    "test:unit": "hardhat test $(find ./test/unit -name '*.*s')",
    "test:integration": "hardhat test $(find ./test/int -name '*.*s')",
    "test:kovan-integration": "hardhat test --network external $(find ./test/external/kovan -name '*.*s')",
    "test:fast": "hardhat test $(find ./test/unit -name '*.*s') $(find ./test/int -name '*.*s')",
    "test:upgrade": "hardhat test $(find ./test/upgrade -name '*.*s')",
    "test:cover": "truffle run coverage",
    "test:manticore": "./test/verification/manticore/run.sh",
    "doc:contracts": "solidity-docgen -i contracts -o docs/contracts/ -t docs/docgen_template/ ",
    "doc:addresses": "node scripts/contracts/get-addresses.js",
    "doc:copyright": "scripts/add-spdx.sh",
    "clean": "yarn clean:build&&yarn clean:coverage&&yarn clean:zos",
    "clean:build": "rm -rf ./build/ ./artifacts/*.development.json ./artifacts/*.spree.json",
    "clean:coverage": "rm -rf ./coverage/ ./coverageEnv/ ./coverage.json",
    "clean:zos": "rm -rf ./zos.json ./zos.dev-8996.json ./zos.dev-8997.json ./.zos.session ./wallets.json zos/",
    "lint": "yarn lint:eslint&&yarn lint:ethlint",
    "lint:eslint": "eslint --ignore-path .gitignore --ignore-pattern circuits --ext .js .",
    "lint:ethlint": "solhint --max-warnings 0 'contracts/**/*.sol'",
    "lint:fix": "yarn lint:eslint --fix && yarn lint:ethlint --fix",
    "security:mythril": "truffle compile&&myth -x --truffle --max-depth 12 --outform markdown 2>&1 | tee mythrilReport.md",
    "security:securify": "docker run -v $(pwd):/project chainsecurity/securify -t 2>&1 | tee securifyReport.txt",
    "security:slither": "slither . 2>&1 | tee slitherReport.txt",
    "security:upgradeability": "yarn clean&&yarn compile&&./scripts/upgradeability_checks.sh"
  },
  "directories": {
    "doc": "docs",
    "test": "test"
  },
  "files": [
    "artifacts/**/*",
    "docs/**/*",
    "circuits/*.zkey",
    "circuits/*.wasm",
    "README.md"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nevermined-io/contracts.git"
  },
  "author": "Nevermined",
  "license": "Apache-2.0",
  "devDependencies": {
    "@gnosis.pm/safe-contracts": "1.2.0",
    "@nomiclabs/hardhat-ethers": "^2.0.4",
    "@nomiclabs/hardhat-truffle5": "^2.0.2",
    "@nomiclabs/hardhat-web3": "^2.0.0",
    "@openzeppelin/contracts-upgradeable": "^4.3.0",
    "@openzeppelin/hardhat-upgrades": "^1.13.0",
    "@openzeppelin/truffle-upgrades": "^1.3.0",
    "@truffle/contract": "~4.2.5",
    "@truffle/hdwallet-provider": "~1.4.1",
    "@trufflesuite/web3-provider-engine": "15.0.13-1",
    "bignumber.js": "^9.0.0",
    "chai": "^4.3.4",
    "chai-as-promised": "^7.1.1",
    "circom": "^0.5.45",
    "circomlib": "^0.5.3",
    "eslint": "^7.0.0",
    "eslint-config-oceanprotocol": "^1.5.0",
    "eslint-plugin-import": "^2.20.2",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-standard": "^4.0.1",
    "eth-gas-reporter": "^0.2.22",
    "ethers": "^5.5.3",
    "ffjavascript": "^0.2.38",
    "findit": "^2.0.0",
    "glob": "^7.2.0",
    "hardhat": "^2.8.3",
    "hardhat-dependency-compiler": "^1.1.2",
    "mathjs": "~7.5.1",
    "prettier": "^2.1.2",
    "snarkjs": "^0.4.6",
    "solhint": "^3.2.0",
    "solidity-coverage": "^0.7.16",
    "solidity-docgen": "^0.5.11",
    "truffle": "~5.1.26",
    "truffle-contract-size": "^2.0.1",
    "truffle-typings": "^1.0.8",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.5",
    "web3": "^1.6.0",
    "yargs": "~15.3.1"
  },
  "resolutions": {
    "@nevermined-io/contract-tools/zos/web3": "1.5.3",
    "@nevermined-io/contract-tools/zos/zos-lib": "2.2.3",
    "@nevermined-io/contract-tools/zos/zos-lib/web3": "1.5.3",
    "web3-eth-accounts/scrypt.js": "0.3.0",
    "web3": "1.5.3",
    "zos/web3": "1.5.3",
    "zos-lib/web3": "1.5.3"
  },
  "dependencies": {
    "@gnosis.pm/safe-core-sdk": "^1.0.0",
    "@gnosis.pm/safe-deployments": "^1.4.0"
  }
}
